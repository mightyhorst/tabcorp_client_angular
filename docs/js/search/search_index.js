var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.127,1,0.576]],["body/components/AppComponent.html",[0,0.234,1,1.019,2,0.276,3,0.235,4,0.852,5,0.852,6,0.922,7,0.196,8,3.151,9,0.922,10,1.638,11,0.984,12,4.886,13,1.199,14,4.886,15,1.199,16,4.886,17,0.276,18,1.398,19,1.775,20,1.295,21,0.724,22,0.029,23,1.159,24,1.25,25,0.921,26,4.886,27,0.555,28,3.755,29,0.362,30,0.455,31,0.235,32,0.318,33,0.787,34,1.109,35,1.109,36,1.199,37,1.205,38,0.922,39,0.792,40,0.922,41,0.724,42,0.922,43,0.724,44,0.922,45,0.922,46,0.665,47,0.922,48,0.609,49,0.922,50,0.609,51,0.922,52,0.609,53,0.922,54,0.609,55,0.922,56,0.665,57,0.922,58,0.724,59,0.922,60,0.922,61,0.665,62,0.922,63,0.922,64,0.724,65,0.922,66,0.724,67,0.922,68,0.724,69,0.922,70,0.665,71,0.922,72,0.665,73,0.852,74,0.609,75,0.922,76,0.022,77,0.022]],["title/modules/AppModule.html",[78,1.604,79,2.126]],["body/modules/AppModule.html",[0,0.106,1,1.095,2,0.2,3,0.17,7,0.142,11,0.401,22,0.03,29,0.635,30,0.329,31,0.245,32,0.23,33,0.569,41,0.754,43,0.754,46,0.981,48,0.898,50,0.898,52,0.898,54,0.898,56,0.981,58,0.754,61,0.981,64,0.754,66,0.754,68,0.754,70,0.981,72,0.981,76,0.017,77,0.017,78,1.93,79,4.366,80,1.604,81,3.847,82,3.847,83,3.847,84,2.278,85,2.278,86,2.278,87,2.278,88,2.278,89,3.273,90,2.515,91,1.709,92,2.321,93,3.282,94,2.278,95,1.99,96,2.714,97,2.278,98,3.91,99,2.278,100,1.99,101,3.282,102,3.91,103,2.278,104,3.91,105,1.462,106,1.138,107,2.714,108,2.714,109,2.714,110,1.99,111,2.714,112,2.714,113,2.714,114,1.99,115,2.714,116,2.714,117,4.462,118,2.312,119,2.278,120,1.99,121,2.714,122,1.776,123,2.278,124,1.776,125,2.278,126,1.776,127,2.278,128,2.714,129,2.714,130,2.714,131,2.714,132,1.99,133,2.714,134,2.714,135,1.99,136,2.714,137,2.714,138,2.278,139,1.138,140,0.975,141,1.138,142,1.462,143,1.99,144,1.776,145,0.903,146,2.714]],["title/modules/AppRoutingModule.html",[78,1.604,89,1.921]],["body/modules/AppRoutingModule.html",[0,0.235,2,0.308,3,0.263,7,0.219,22,0.03,29,0.615,30,0.508,31,0.328,32,0.355,48,0.85,50,0.85,52,0.85,54,0.85,76,0.023,77,0.023,78,2.069,89,3.099,101,4.399,106,2.397,117,5.029,118,2.479,119,3.519,122,2.743,123,3.519,124,2.743,125,3.519,126,2.743,127,3.519,147,4.193,148,4.193,149,5.242,150,2.258,151,3.519,152,2.802,153,4.193,154,4.399,155,4.193,156,4.193,157,1.294,158,3.519,159,4.193,160,4.193]],["title/components/AuthComponent.html",[0,0.127,41,0.627]],["body/components/AuthComponent.html",[0,0.233,1,0.657,2,0.272,3,0.232,4,0.841,5,0.841,6,0.91,7,0.193,9,0.91,10,1.636,11,0.976,13,1.189,15,1.189,17,0.272,22,0.029,25,0.878,27,0.716,29,0.357,30,0.449,31,0.232,32,0.314,33,0.776,34,1.099,35,1.099,36,1.189,37,1.199,38,0.91,39,0.786,40,0.91,41,1.104,42,0.91,43,0.715,44,0.91,45,0.91,46,0.657,47,0.91,48,0.601,49,0.91,50,0.601,51,0.91,52,0.601,53,0.91,54,0.601,55,0.91,56,0.657,57,0.91,58,0.715,59,0.91,60,0.91,61,0.657,62,0.91,63,0.91,64,0.715,65,0.91,66,0.715,67,0.91,68,0.715,69,0.91,70,0.657,71,0.91,72,0.657,73,0.841,74,0.601,75,0.91,76,0.021,77,0.021,161,3.11,162,1.284,163,1.431,164,5.723,165,4.844,166,4.844,167,0.858,168,1.517,169,0.956,170,3.706,171,3.706,172,0.548,173,0.841,174,2.609]],["title/components/ConfirmEmailComponent.html",[0,0.127,43,0.627]],["body/components/ConfirmEmailComponent.html",[0,0.231,1,0.64,2,0.265,3,0.226,4,0.82,5,0.82,6,0.886,7,0.188,9,0.886,10,1.631,11,0.973,13,1.169,15,1.169,17,0.265,22,0.029,25,0.871,27,0.704,29,0.348,30,0.437,31,0.226,32,0.306,33,0.756,34,1.081,35,1.081,36,1.169,37,1.187,38,0.886,39,0.772,40,0.886,41,0.697,42,0.886,43,1.093,44,1.555,45,0.886,46,0.64,47,0.886,48,0.586,49,0.886,50,0.586,51,0.886,52,0.586,53,0.886,54,0.586,55,0.886,56,0.64,57,0.886,58,0.697,59,0.886,60,0.886,61,0.64,62,0.886,63,0.886,64,0.697,65,0.886,66,0.697,67,0.886,68,0.697,69,0.886,70,0.64,71,0.886,72,0.64,73,0.82,74,0.586,75,0.886,76,0.021,77,0.021,135,3.908,162,1.263,163,1.413,167,0.844,168,1.502,169,0.944,172,0.534,173,0.82,174,2.565,175,4.472,176,3.03,177,4.755,178,4.762,179,4.762,180,3.611,181,3.611]],["title/components/ContainerComponent.html",[0,0.127,46,0.576]],["body/components/ContainerComponent.html",[0,0.233,1,0.658,2,0.273,3,0.233,4,0.843,5,0.843,6,0.911,7,0.194,9,0.911,10,1.636,11,0.977,13,1.191,15,1.191,17,0.273,22,0.03,25,0.879,27,0.717,29,0.358,30,0.45,31,0.233,32,0.315,33,0.778,34,1.101,35,1.101,36,1.191,37,1.2,38,0.911,39,0.787,40,0.911,41,0.716,42,0.911,43,0.716,44,0.911,45,0.911,46,1.015,47,0.911,48,0.602,49,0.911,50,0.602,51,0.911,52,0.602,53,0.911,54,0.602,55,0.911,56,0.658,57,0.911,58,0.716,59,0.911,60,0.911,61,0.658,62,0.911,63,0.911,64,0.716,65,0.911,66,0.716,67,0.911,68,0.716,69,0.911,70,0.658,71,0.911,72,0.658,73,0.843,74,0.602,75,0.911,76,0.021,77,0.021,162,1.286,163,1.432,167,0.859,168,1.519,169,0.957,172,0.549,173,0.843,182,3.116,183,4.07,184,4.85,185,4.85,186,3.713,187,3.713]],["title/injectables/FavouritesFactory.html",[90,1.476,188,1.26]],["body/injectables/FavouritesFactory.html",[2,0.233,3,0.198,7,0.165,11,0.468,17,0.233,18,1.247,20,0.839,21,1.036,22,0.03,23,0.977,24,1.054,27,0.833,29,0.518,30,0.383,31,0.273,32,0.268,39,0.808,76,0.019,77,0.019,90,1.979,91,1.657,139,1.327,140,1.137,141,1.327,142,1.705,145,1.874,157,1.875,167,0.772,169,0.561,172,0.833,173,0.989,188,1.932,189,2.322,190,3.174,191,3.525,192,3.042,193,2.657,194,4.358,195,2.089,196,1.79,197,2.151,198,3.166,199,2.708,200,2.657,201,2.576,202,1.925,203,1.974,204,2.852,205,3.166,206,2.8,207,3.684,208,2.852,209,3.166,210,2.852,211,2.852,212,3.261,213,2.852,214,1.872,215,1.327,216,1.705,217,1.705,218,1.827,219,1.451,220,1.872,221,2.071,222,1.563,223,2.071,224,2.071,225,0.663,226,1.438,227,1.705,228,1.227,229,2.071,230,2.071,231,2.071,232,2.071,233,2.071,234,2.071,235,2.071,236,1.979,237,2.071,238,2.071,239,2.071,240,1.872]],["title/injectables/FlickrApiService.html",[91,1.003,188,1.26]],["body/injectables/FlickrApiService.html",[0,0.152,2,0.198,3,0.169,7,0.14,17,0.198,18,1.112,20,1.464,21,1.065,22,0.03,23,0.831,24,0.896,25,0.817,27,0.784,29,0.562,30,0.326,31,0.169,32,0.228,37,0.956,39,0.63,74,0.437,76,0.017,77,0.017,91,1.2,105,1.45,140,1.983,145,1.294,157,1.408,167,0.689,169,0.477,172,0.784,188,1.769,190,2.298,195,1.629,196,1.903,202,1.542,203,1.2,214,2.298,215,1.128,216,1.45,219,1.663,222,1.329,225,0.814,228,1.044,241,4.634,242,2.259,243,2.931,244,4.447,245,4.447,246,4.996,247,2.692,248,4.996,249,3.887,250,3.262,251,3.887,252,2.692,253,2.692,254,3.262,255,3.262,256,3.262,257,2.298,258,2.094,259,2.851,260,2.851,261,3.262,262,2.543,263,3.346,264,3.262,265,1.937,266,3.262,267,3.829,268,3.262,269,2.954,270,3.725,271,2.851,272,2.854,273,3.887,274,3.262,275,3.887,276,2.543,277,3.887,278,3.887,279,3.262,280,3.887,281,2.692,282,3.133,283,3.887,284,2.692,285,5.299,286,2.692,287,2.692,288,2.692,289,2.692,290,2.692,291,2.692,292,2.692,293,2.259,294,1.591,295,2.692,296,1.329,297,2.692,298,1.45,299,2.692,300,2.259,301,2.692,302,1.974,303,2.692,304,2.692,305,3.887,306,2.543,307,2.692,308,3.887,309,2.692,310,2.259,311,3.262,312,2.259,313,1.974,314,2.259,315,2.259,316,1.761,317,2.094,318,2.851,319,2.851,320,2.259,321,2.692,322,2.692,323,2.692,324,4.562,325,2.692,326,2.692,327,2.692,328,2.692,329,2.692,330,2.692,331,2.692,332,2.851,333,2.692,334,2.692,335,2.259,336,2.259,337,2.692,338,2.692]],["title/components/FlickrDetailsComponent.html",[0,0.127,48,0.527]],["body/components/FlickrDetailsComponent.html",[0,0.208,1,0.43,2,0.178,3,0.152,4,0.551,5,0.551,6,0.596,7,0.127,9,0.596,10,1.554,11,0.919,13,0.885,15,0.885,17,0.178,18,1.031,19,1.643,20,1.14,21,0.918,22,0.03,23,1.112,24,1.2,25,0.931,27,0.815,29,0.513,30,0.294,31,0.152,32,0.206,33,0.509,34,0.818,35,0.818,36,0.885,37,0.996,38,0.596,39,0.697,40,0.596,41,0.468,42,0.596,43,0.468,44,0.596,45,0.596,46,0.43,47,0.596,48,0.771,49,0.596,50,0.394,51,0.596,52,0.394,53,0.596,54,0.394,55,0.596,56,0.43,57,0.596,58,0.468,59,0.596,60,0.596,61,0.43,62,1.39,63,0.596,64,0.468,65,0.596,66,0.468,67,0.596,68,0.468,69,0.596,70,0.43,71,0.596,72,0.43,73,0.551,74,0.394,75,0.596,76,0.016,77,0.016,91,0.749,92,2.31,105,1.308,106,1.511,122,3.704,139,1.018,140,0.872,141,1.018,142,1.308,144,1.588,145,1.431,150,1.308,152,2.16,157,1.785,162,0.956,163,1.14,167,0.639,168,1.261,169,0.43,172,0.533,173,0.818,195,1.018,196,0.872,199,1.637,201,1.435,202,1.112,203,1.326,219,1.2,228,0.941,236,1.103,243,1.198,258,2.562,265,1.844,298,1.308,339,3.049,340,2.037,341,0.941,342,3.604,343,2.643,344,3.604,345,3.604,346,1.435,347,3.604,348,3.604,349,3.112,350,4.756,351,4.756,352,2.812,353,1.588,354,3.112,355,3.604,356,2.428,357,2.428,358,2.643,359,3.604,360,3.604,361,2.428,362,2.541,363,2.428,364,2.13,365,2.13,366,3.112,367,1.779,368,2.13,369,2.13,370,2.13,371,1.637,372,2.428,373,1.588,374,1.588,375,1.588,376,2.037,377,2.428,378,2.428,379,2.428,380,2.428,381,2.428,382,2.428,383,2.428,384,2.428,385,2.428,386,2.428,387,2.428,388,1.78,389,1.308,390,2.428,391,2.428,392,2.037,393,2.428,394,2.428,395,2.037]],["title/components/FlickrFavouritesComponent.html",[0,0.127,50,0.527]],["body/components/FlickrFavouritesComponent.html",[0,0.221,1,0.461,2,0.191,3,0.163,4,0.591,5,0.591,6,0.639,7,0.136,9,0.639,10,1.569,11,0.93,13,0.931,15,0.931,17,0.191,18,1.086,19,1.685,21,0.864,22,0.03,23,1.382,24,1.49,25,0.915,27,0.773,29,0.543,30,0.315,31,0.163,32,0.221,33,0.545,34,0.861,35,0.861,36,0.931,37,1.095,38,0.639,39,0.726,40,0.639,41,0.502,42,0.639,43,0.502,44,0.639,45,0.639,46,0.461,47,0.639,48,0.422,49,0.639,50,0.798,51,0.639,52,0.422,53,0.639,54,0.422,55,0.639,56,0.461,57,0.639,58,0.502,59,0.639,60,0.639,61,0.461,62,1.383,63,0.639,64,0.502,65,0.639,66,0.502,67,0.639,68,0.502,69,0.639,70,0.461,71,0.639,72,0.461,73,0.591,74,0.422,75,0.639,76,0.017,77,0.017,90,2.559,91,1.518,105,1.402,106,1.59,126,3.571,139,1.091,140,0.935,141,1.091,143,1.909,145,0.866,150,1.402,152,2.234,157,1.685,162,1.006,163,1.187,167,0.672,168,1.304,169,0.461,172,0.385,173,0.591,191,2.243,192,1.873,195,1.091,196,0.935,197,2.209,203,1.518,206,1.723,218,2.469,226,1.182,227,1.402,228,1.009,236,1.182,243,1.873,265,1.471,282,1.539,298,1.402,339,2.94,341,1.009,346,1.539,349,3.218,353,1.703,354,3.218,364,2.243,365,2.243,367,1.873,368,2.243,369,2.243,370,2.243,371,1.723,373,1.703,374,1.703,389,2.043,396,2.185,397,2.482,398,2.482,399,3.184,400,3.794,401,3.794,402,3.794,403,2.603,404,2.603,405,2.603,406,1.703,407,2.603,408,3.794,409,2.185,410,1.539,411,2.603,412,2.603,413,2.603]],["title/components/FlickrListComponent.html",[0,0.127,52,0.527]],["body/components/FlickrListComponent.html",[0,0.191,1,0.393,2,0.163,3,0.139,4,0.503,5,0.503,6,0.544,7,0.116,9,0.544,10,1.533,11,0.887,13,0.826,15,0.826,17,0.163,18,0.963,19,1.402,20,0.587,21,0.942,22,0.03,23,1.038,24,1.12,25,0.887,27,0.815,29,0.515,30,0.268,31,0.139,32,0.188,33,0.464,34,0.764,35,0.764,36,0.826,37,0.952,38,0.544,39,0.792,40,0.544,41,0.427,42,0.544,43,0.427,44,0.544,45,0.544,46,0.393,47,0.544,48,0.359,49,0.544,50,0.359,51,0.544,52,0.737,53,0.544,54,0.359,55,0.544,56,0.393,57,0.544,58,0.427,59,0.544,60,0.544,61,0.393,62,1.312,63,0.544,64,0.427,65,0.544,66,0.427,67,0.544,68,0.427,69,0.544,70,0.393,71,0.544,72,0.393,73,0.503,74,0.359,75,0.544,76,0.015,77,0.015,91,1.402,92,2.241,105,1.193,106,1.41,118,3.335,139,0.929,140,0.796,141,0.929,144,1.45,145,0.737,150,1.193,152,1.528,157,1.957,162,0.892,163,1.079,167,0.596,168,1.205,169,0.393,172,0.672,173,1.031,195,1.705,196,1.631,197,2.008,199,1.848,203,1.65,206,1.528,228,0.859,236,1.006,243,2.411,257,1.989,258,2.191,265,1.305,276,2.202,282,1.31,298,1.193,316,1.45,339,3.038,343,3.332,349,2.973,353,1.45,354,2.973,358,2.468,362,2.405,364,1.989,365,1.989,366,3.197,367,1.661,368,1.989,369,1.989,370,1.989,371,1.528,373,1.45,374,3.197,388,2.984,389,1.812,397,2.202,398,3.197,406,1.45,410,2.686,414,1.859,415,3.365,416,3.365,417,3.365,418,4.885,419,3.365,420,3.365,421,3.365,422,2.215,423,2.984,424,2.202,425,2.215,426,3.365,427,2.215,428,2.468,429,2.824,430,2.468,431,2.824,432,2.215,433,2.215,434,2.215,435,2.215,436,2.215,437,2.215,438,2.215,439,1.859,440,2.215,441,1.859,442,1.625,443,1.859,444,1.625,445,1.859,446,1.859,447,1.859,448,1.859,449,3.414,450,1.859,451,1.859,452,1.859,453,3.414,454,1.859,455,1.859]],["title/classes/FlickrPhoto.html",[32,0.275,203,1.003]],["body/classes/FlickrPhoto.html",[0,0.157,2,0.206,3,0.176,7,0.146,17,0.206,18,1.145,19,1.571,20,1.771,21,1.199,22,0.03,23,0.865,25,0.753,27,0.934,29,0.27,31,0.176,32,0.339,37,0.587,39,0.757,76,0.018,77,0.018,145,1.332,151,2.352,167,0.709,169,0.497,172,0.753,177,3.358,195,1.175,196,1.006,202,1.44,203,1.235,217,2.155,218,1.677,219,1.553,222,1.383,225,0.838,254,3.358,255,3.358,256,3.358,257,2.365,258,2.155,259,2.934,260,2.934,261,3.358,262,2.618,263,3.422,264,3.358,265,1.809,266,3.358,267,3.358,268,3.358,269,3.009,272,2.741,296,2.512,310,3.358,311,2.352,312,2.352,313,2.055,314,2.352,315,2.352,316,1.834,317,1.509,318,2.055,319,2.055,320,2.352,336,2.352,341,2.087,346,1.657,389,2.155,456,2.352,457,4.272,458,4.272,459,4.272,460,4.667,461,3.009,462,4.272,463,4.272,464,3.733,465,4.667,466,4.667,467,4.001,468,4.001,469,2.802,470,2.802,471,2.802,472,2.802,473,3.358,474,2.802,475,2.802,476,2.802,477,2.802,478,2.802,479,2.802,480,2.802,481,2.802,482,2.802,483,2.802,484,2.802,485,2.802,486,2.802,487,2.802,488,2.802,489,2.802,490,2.802,491,2.802,492,2.802,493,2.802,494,2.802,495,2.802,496,2.802,497,2.802,498,2.802,499,2.802,500,2.802,501,2.802,502,2.802,503,2.802,504,2.352,505,2.802,506,2.352,507,2.055,508,2.055,509,2.352,510,2.352,511,2.352,512,2.352,513,2.802,514,2.802,515,2.802,516,4.667,517,4.667,518,4.667,519,2.802,520,2.802,521,2.802,522,2.802,523,2.802]],["title/components/FlickrSearchComponent.html",[0,0.127,54,0.527]],["body/components/FlickrSearchComponent.html",[0,0.21,1,0.285,2,0.118,3,0.101,4,0.366,5,0.366,6,0.395,7,0.084,9,0.395,10,1.448,11,0.846,13,0.643,15,0.643,17,0.118,18,0.749,19,1.386,20,1.111,21,0.866,22,0.03,23,1.176,24,1.268,25,0.864,27,0.793,29,0.492,30,0.195,31,0.101,32,0.137,33,0.337,34,0.594,35,0.594,36,0.643,37,0.941,38,0.395,39,0.768,40,0.395,41,0.311,42,0.395,43,0.311,44,0.395,45,0.395,46,0.285,47,0.395,48,0.261,49,0.395,50,0.261,51,0.395,52,0.261,53,0.395,54,0.618,55,0.395,56,0.285,57,0.395,58,0.311,59,0.395,60,0.395,61,0.285,62,1.162,63,0.395,64,0.311,65,0.395,66,0.311,67,0.395,68,0.311,69,0.395,70,0.285,71,0.395,72,0.285,73,0.366,74,0.261,75,0.395,76,0.012,77,0.017,91,1.176,92,1.984,105,0.868,106,1.098,124,3.579,139,0.675,140,0.578,141,0.675,144,1.054,145,1.575,150,0.868,152,1.731,157,1.894,162,0.694,163,0.877,167,0.464,168,1.01,169,0.285,172,0.7,173,1.019,195,1.757,196,1.613,197,1.633,199,1.503,202,1.021,203,1.461,206,1.189,215,0.675,216,0.868,219,1.395,228,0.625,236,1.189,243,2.517,257,2.478,258,1.782,262,1.054,265,1.015,270,4.054,271,3.471,272,2.747,274,1.352,276,1.713,282,3.098,293,1.352,298,0.868,306,2.165,316,1.054,339,2.946,341,0.625,343,1.92,346,0.952,349,2.493,353,1.054,354,2.493,358,1.92,362,0.952,364,1.548,365,1.548,366,2.743,367,1.292,368,1.548,369,1.548,370,1.548,371,1.189,373,1.054,374,2.743,375,1.054,388,2.426,389,2.052,397,1.713,398,2.743,406,1.054,410,1.548,423,2.426,424,1.713,428,1.92,429,2.198,430,1.92,431,2.198,439,1.352,441,1.352,442,1.181,443,1.352,444,2.426,445,1.352,446,1.352,447,1.352,448,1.352,449,2.777,450,1.352,451,1.352,452,1.352,453,2.777,454,1.352,455,1.352,508,1.181,509,1.352,524,1.352,525,2.619,526,3.81,527,2.619,528,4.192,529,2.777,530,2.619,531,2.619,532,2.777,533,2.619,534,2.619,535,2.619,536,2.619,537,3.81,538,3.198,539,2.619,540,2.619,541,2.619,542,2.619,543,1.611,544,2.619,545,1.611,546,2.619,547,1.611,548,2.619,549,2.619,550,2.619,551,1.611,552,2.619,553,1.611,554,4.491,555,2.198,556,2.619,557,3.81,558,2.619,559,2.619,560,1.611,561,1.611,562,1.611,563,1.611,564,2.619,565,2.619,566,1.611,567,2.619,568,1.611,569,1.611,570,1.611,571,4.733,572,1.352,573,1.054,574,2.619,575,1.611,576,1.611,577,1.611,578,1.352,579,2.619,580,1.611,581,1.611,582,2.619,583,1.611,584,1.611,585,1.611,586,1.611,587,1.352,588,1.611,589,1.611,590,1.611,591,1.611,592,1.611,593,1.352,594,1.352,595,1.611,596,1.611,597,1.611,598,1.611,599,1.611,600,1.611,601,1.611,602,1.611,603,1.611,604,1.611,605,1.611]],["title/components/FlickrTileComponent.html",[0,0.127,56,0.576]],["body/components/FlickrTileComponent.html",[0,0.218,1,0.542,2,0.225,3,0.192,4,0.694,5,0.694,6,0.751,7,0.16,9,0.751,10,1.602,11,0.941,13,1.045,15,1.045,17,0.225,21,0.821,22,0.03,25,0.926,27,0.782,29,0.472,30,0.37,31,0.192,32,0.259,33,0.641,34,0.966,35,0.966,36,1.045,37,1.108,38,0.751,39,0.794,40,0.751,41,0.59,42,0.751,43,0.59,44,0.751,45,0.751,46,0.542,47,0.751,48,0.496,49,0.751,50,0.496,51,0.751,52,0.496,53,0.751,54,0.496,55,0.751,56,0.937,57,0.751,58,0.59,59,0.751,60,0.751,61,0.542,62,0.751,63,0.751,64,0.59,65,0.751,66,0.59,67,0.751,68,0.59,69,0.751,70,0.542,71,0.751,72,0.542,73,0.694,74,0.496,75,0.751,76,0.019,77,0.019,90,2.615,118,3.288,120,4.078,143,2.243,145,1.018,157,1.716,162,1.128,163,1.298,167,0.754,168,1.403,169,0.542,172,0.629,173,0.966,192,2.745,195,1.282,196,1.098,202,1.313,203,1.51,218,1.784,222,2.1,228,1.186,265,1.186,298,1.647,339,2.995,352,3.128,395,3.571,410,2.516,506,3.571,507,3.121,606,2.567,607,4.255,608,4.255,609,5.29,610,3.058,611,4.255,612,3.058,613,3.058,614,5.29,615,3.121,616,4.255,617,4.255,618,2.567,619,3.058,620,3.058,621,4.255,622,4.255,623,3.058,624,4.255,625,4.255]],["title/components/ForgotPasswordComponent.html",[0,0.127,58,0.627]],["body/components/ForgotPasswordComponent.html",[0,0.231,1,0.64,2,0.265,3,0.226,4,0.82,5,0.82,6,0.886,7,0.188,9,0.886,10,1.631,11,0.973,13,1.169,15,1.169,17,0.265,22,0.029,25,0.871,27,0.704,29,0.348,30,0.437,31,0.226,32,0.306,33,0.756,34,1.081,35,1.081,36,1.169,37,1.187,38,0.886,39,0.772,40,0.886,41,0.697,42,0.886,43,0.697,44,0.886,45,0.886,46,0.64,47,0.886,48,0.586,49,0.886,50,0.586,51,0.886,52,0.586,53,0.886,54,0.586,55,0.886,56,0.64,57,0.886,58,1.093,59,1.555,60,0.886,61,0.64,62,0.886,63,0.886,64,0.697,65,0.886,66,0.697,67,0.886,68,0.697,69,0.886,70,0.64,71,0.886,72,0.64,73,0.82,74,0.586,75,0.886,76,0.021,77,0.021,132,3.908,162,1.263,163,1.413,167,0.844,168,1.502,169,0.944,172,0.534,173,0.82,174,2.565,626,4.472,627,3.03,628,5.666,629,4.762,630,4.762,631,3.611,632,3.611]],["title/interfaces/IFlickrApiContract.html",[225,0.681,294,1.921]],["body/interfaces/IFlickrApiContract.html",[2,0.333,3,0.284,7,0.236,17,0.333,18,1.573,19,1.398,20,1.736,21,1.142,22,0.029,25,0.67,29,0.437,31,0.344,74,0.735,76,0.024,77,0.024,202,1.398,219,1.507,225,1.289,294,3.25,296,2.921,317,2.439,332,4.514,341,1.756,371,2.057,461,2.677,633,3.321,634,5.166,635,4.027,636,3.321,637,3.801,638,3.321]],["title/interfaces/IFlickrApiItemContract.html",[225,0.681,296,1.604]],["body/interfaces/IFlickrApiItemContract.html",[2,0.292,3,0.249,4,0.902,7,0.207,17,0.292,18,1.45,19,1.813,20,1.805,21,1.274,22,0.029,25,0.588,31,0.249,74,0.644,76,0.022,77,0.022,169,0.704,202,1.226,217,2.14,219,1.687,225,1.169,272,3.165,296,2.501,317,2.14,341,2.353,371,1.805,457,4.931,458,4.931,459,4.931,461,3.474,462,4.931,463,4.931,464,4.309,636,2.914,639,3.335,640,3.974,641,3.974,642,5.067,643,3.974]],["title/interfaces/IFlickrFeedContract.html",[225,0.681,635,2.126]],["body/interfaces/IFlickrFeedContract.html",[2,0.307,3,0.262,7,0.218,17,0.307,18,1.496,19,1.846,20,1.779,21,1.244,22,0.029,25,0.773,29,0.402,31,0.328,74,0.97,76,0.023,77,0.023,202,1.614,219,1.74,225,1.291,294,2.468,296,3.041,317,2.816,332,3.062,341,2.388,371,2.375,461,3.537,633,3.062,634,3.504,635,3.735,636,3.834,637,5.021,638,4.388]],["title/components/LayoutHeaderComponent.html",[0,0.127,61,0.576]],["body/components/LayoutHeaderComponent.html",[0,0.223,1,0.579,2,0.24,3,0.205,4,0.741,5,0.741,6,0.802,7,0.17,9,0.802,10,1.614,11,0.951,13,1.093,15,1.093,17,0.24,19,1.855,20,1.442,21,0.859,22,0.03,23,1.563,24,1.686,25,0.842,27,0.842,29,0.315,30,0.395,31,0.205,32,0.277,33,0.684,34,1.01,35,1.01,36,1.093,37,1.14,38,0.802,39,0.722,40,0.802,41,0.63,42,0.802,43,0.63,44,0.802,45,0.802,46,0.579,47,0.802,48,0.53,49,0.802,50,0.53,51,0.802,52,0.53,53,0.802,54,0.53,55,0.802,56,0.579,57,0.802,58,0.63,59,0.802,60,0.802,61,0.964,62,1.476,63,0.802,64,0.63,65,0.802,66,0.63,67,0.802,68,0.63,69,0.802,70,0.579,71,0.802,72,0.579,73,0.741,74,0.53,75,0.802,76,0.02,77,0.02,110,4.308,152,2.022,162,1.18,163,1.343,167,0.789,168,1.442,169,0.897,172,0.483,173,0.741,245,3.736,352,3.473,367,2.5,368,2.632,369,2.994,370,2.632,644,4.93,645,2.74,646,4.451,647,4.451,648,3.265,649,3.265,650,3.265,651,4.451,652,3.265,653,3.265,654,4.451]],["title/components/LoginComponent.html",[0,0.127,64,0.627]],["body/components/LoginComponent.html",[0,0.233,1,0.657,2,0.272,3,0.232,4,0.841,5,0.841,6,0.91,7,0.193,9,0.91,10,1.636,11,0.976,13,1.189,15,1.189,17,0.272,22,0.029,25,0.878,27,0.716,29,0.357,30,0.449,31,0.232,32,0.314,33,0.776,34,1.099,35,1.099,36,1.189,37,1.199,38,0.91,39,0.786,40,0.91,41,0.715,42,0.91,43,0.715,44,0.91,45,0.91,46,0.657,47,0.91,48,0.601,49,0.91,50,0.601,51,0.91,52,0.601,53,0.91,54,0.601,55,0.91,56,0.657,57,0.91,58,0.715,59,0.91,60,0.91,61,0.657,62,0.91,63,0.91,64,1.104,65,0.91,66,0.715,67,0.91,68,0.715,69,0.91,70,0.657,71,0.91,72,0.657,73,0.841,74,0.601,75,0.91,76,0.021,77,0.021,162,1.284,163,1.431,167,0.858,168,1.517,169,0.956,172,0.548,173,0.841,174,2.609,655,3.11,656,5.723,657,4.844,658,4.844,659,3.706,660,3.706]],["title/injectables/PhotoCache.html",[92,1.362,188,1.26]],["body/injectables/PhotoCache.html",[0,0.104,2,0.194,3,0.166,7,0.138,11,0.391,17,0.194,18,1.098,20,0.701,21,1.015,22,0.03,23,0.816,24,0.88,27,0.837,29,0.478,30,0.32,31,0.24,32,0.224,39,0.854,76,0.017,77,0.017,91,1.529,92,1.609,139,1.109,140,0.95,141,1.109,142,2.067,145,1.931,157,1.916,167,0.878,169,0.469,172,0.874,173,1.025,188,1.751,190,2.93,191,3.347,192,3.064,193,2.22,195,2.206,196,1.89,197,1.894,199,2.685,200,2.22,201,3.111,202,1.931,203,1.986,204,2.511,206,2.763,207,3.443,208,2.511,210,2.511,211,2.511,212,2.956,213,2.511,214,1.564,215,1.109,216,1.425,217,1.425,218,1.894,219,1.277,220,1.564,221,1.731,222,1.306,223,1.731,224,1.731,225,0.554,226,1.743,227,2.956,228,1.026,229,1.731,230,1.731,231,1.731,232,1.731,233,1.731,234,1.731,235,1.731,236,1.743,237,1.731,238,1.731,239,1.731,240,2.269,243,2.446,265,1.026,269,2.269,375,1.731,573,1.731,615,1.94,661,1.94,662,3.838,663,3.838,664,3.838,665,2.645,666,3.221,667,2.645,668,2.645,669,2.645,670,3.221,671,2.645,672,3.221,673,3.221,674,2.22,675,2.22,676,1.94,677,1.94,678,2.22,679,2.22,680,1.94,681,2.22,682,2.22,683,2.22,684,2.22,685,2.22,686,2.22]],["title/interfaces/PhotoHashTable.html",[225,0.681,226,1.476]],["body/interfaces/PhotoHashTable.html",[2,0.26,3,0.222,7,0.185,11,0.695,17,0.26,20,1.246,22,0.03,27,0.524,29,0.542,30,0.429,31,0.294,32,0.3,76,0.021,77,0.021,90,1.608,91,1.451,139,1.484,140,1.271,141,1.484,142,2.531,145,2.002,157,1.451,172,0.695,188,1.822,189,2.596,190,2.093,191,3.119,192,2.775,197,1.747,199,2.787,201,2.093,202,1.923,203,1.894,204,2.316,206,2.831,207,3.678,208,2.316,210,2.316,211,2.316,212,3.453,213,2.316,214,2.093,215,1.484,216,1.907,217,1.907,218,2.356,219,1.871,220,2.779,221,3.075,222,2.32,223,3.075,224,3.075,225,0.985,226,2.135,227,2.531,228,1.372,229,2.316,230,2.316,231,2.316,232,2.316,233,2.316,234,2.316,235,2.316,236,2.135,237,2.316,238,2.316,239,2.316,240,2.093,341,1.372,687,3.54]],["title/interfaces/PhotoHashTable-1.html",[225,0.568,226,1.232,688,1.99]],["body/interfaces/PhotoHashTable-1.html",[0,0.121,2,0.227,3,0.193,7,0.161,11,0.633,17,0.227,20,1.136,22,0.03,27,0.457,29,0.512,30,0.374,31,0.268,32,0.262,76,0.019,77,0.019,91,1.322,92,1.294,139,1.294,140,1.108,141,1.294,142,2.649,145,2.04,157,1.722,167,0.547,172,0.786,188,1.66,190,1.825,191,2.907,192,2.85,197,1.524,199,2.784,201,2.907,202,1.935,203,1.916,204,2.02,206,2.819,207,3.476,208,2.02,210,2.02,211,2.02,212,3.218,213,2.02,214,1.825,215,1.294,216,1.663,217,1.663,218,2.339,219,1.768,220,2.532,221,2.802,222,2.114,223,2.802,224,2.802,225,0.897,226,2.234,227,3.005,228,1.197,229,2.02,230,2.02,231,2.02,232,2.02,233,2.02,234,2.02,235,2.02,236,1.945,237,2.02,238,2.02,239,2.02,240,2.532,243,2.114,265,1.197,269,2.532,341,1.197,375,2.02,573,2.02,615,2.264,661,2.264,666,2.591,670,2.591,672,2.591,673,2.591,674,2.591,675,2.591,676,2.264,677,2.264,678,2.591,679,2.591,680,2.264,681,2.591,682,2.591,683,2.591,684,2.591,685,2.591,686,2.591,689,3.087]],["title/components/ProfileComponent.html",[0,0.127,66,0.627]],["body/components/ProfileComponent.html",[0,0.233,1,0.657,2,0.272,3,0.232,4,0.841,5,0.841,6,0.91,7,0.193,9,0.91,10,1.636,11,0.976,13,1.189,15,1.189,17,0.272,22,0.029,25,0.878,27,0.716,29,0.357,30,0.449,31,0.232,32,0.314,33,0.776,34,1.099,35,1.099,36,1.189,37,1.199,38,0.91,39,0.786,40,0.91,41,0.715,42,0.91,43,0.715,44,0.91,45,0.91,46,0.657,47,0.91,48,0.601,49,0.91,50,0.601,51,0.91,52,0.601,53,0.91,54,0.601,55,0.91,56,0.657,57,0.91,58,0.715,59,0.91,60,0.91,61,0.657,62,0.91,63,0.91,64,0.715,65,0.91,66,1.104,67,0.91,68,0.715,69,0.91,70,0.657,71,0.91,72,0.657,73,0.841,74,0.601,75,0.91,76,0.021,77,0.021,162,1.284,163,1.431,167,0.858,168,1.517,169,0.956,172,0.548,173,0.841,174,2.609,690,3.11,691,5.723,692,4.844,693,4.844,694,3.706,695,3.706]],["title/components/RegisterComponent.html",[0,0.127,68,0.627]],["body/components/RegisterComponent.html",[0,0.233,1,0.657,2,0.272,3,0.232,4,0.841,5,0.841,6,0.91,7,0.193,9,0.91,10,1.636,11,0.976,13,1.189,15,1.189,17,0.272,22,0.029,25,0.878,27,0.716,29,0.357,30,0.449,31,0.232,32,0.314,33,0.776,34,1.099,35,1.099,36,1.189,37,1.199,38,0.91,39,0.786,40,0.91,41,0.715,42,0.91,43,0.715,44,0.91,45,0.91,46,0.657,47,0.91,48,0.601,49,0.91,50,0.601,51,0.91,52,0.601,53,0.91,54,0.601,55,0.91,56,0.657,57,0.91,58,0.715,59,0.91,60,0.91,61,0.657,62,0.91,63,0.91,64,0.715,65,0.91,66,0.715,67,0.91,68,1.104,69,0.91,70,0.657,71,0.91,72,0.657,73,0.841,74,0.601,75,0.91,76,0.021,77,0.021,162,1.284,163,1.431,167,0.858,168,1.517,169,0.956,172,0.548,173,0.841,174,2.609,696,3.11,697,5.723,698,4.844,699,4.844,700,3.706,701,3.706]],["title/components/SidebarComponent.html",[0,0.127,70,0.576]],["body/components/SidebarComponent.html",[0,0.218,1,0.541,2,0.224,3,0.191,4,0.693,5,0.693,6,0.75,7,0.159,9,0.75,10,1.602,11,0.961,13,1.043,15,1.043,17,0.224,18,1.216,19,1.776,21,0.589,22,0.03,23,0.942,24,1.016,25,0.873,27,0.723,29,0.41,30,0.37,31,0.191,32,0.259,33,0.64,34,0.965,35,0.965,36,1.043,37,1.108,38,0.75,39,0.689,40,0.75,41,0.589,42,0.75,43,0.589,44,0.75,45,0.75,46,0.541,47,0.75,48,0.495,49,0.75,50,0.495,51,0.75,52,0.495,53,0.75,54,0.495,55,0.75,56,0.541,57,0.75,58,0.589,59,0.75,60,0.75,61,0.541,62,0.75,63,0.75,64,0.589,65,0.75,66,0.589,67,0.75,68,0.589,69,0.75,70,0.937,71,0.75,72,0.541,73,1.11,74,0.495,75,0.75,76,0.019,77,0.019,152,2.614,154,3.567,157,1.632,158,3.567,162,1.127,163,1.296,167,0.753,168,1.402,169,0.866,172,0.452,173,0.693,218,1.782,270,2.781,272,2.289,362,2.513,367,2.84,702,2.563,703,3.053,704,4.251,705,3.559,706,3.053,707,3.053,708,3.567,709,4.251,710,4.83,711,6.313,712,5.755,713,5.755,714,3.567,715,4.251,716,4.251,717,3.053,718,2.563,719,3.053,720,3.053]],["title/interfaces/SidebarItem.html",[225,0.681,705,1.921]],["body/interfaces/SidebarItem.html",[2,0.335,3,0.286,7,0.238,17,0.335,18,1.579,19,1.904,20,1.775,21,1.219,22,0.029,31,0.286,76,0.024,77,0.024,152,2.802,196,1.982,225,1.156,367,3.045,473,4.982,705,3.263,710,5.178,714,5.178,721,3.827]],["title/components/SidebarItemComponent.html",[0,0.127,72,0.576]],["body/components/SidebarItemComponent.html",[0,0.229,1,0.624,2,0.259,3,0.221,4,0.799,5,0.799,6,0.864,7,0.184,9,0.864,10,1.627,11,0.97,13,1.15,15,1.15,17,0.259,21,0.679,22,0.029,25,0.864,27,0.778,29,0.451,30,0.426,31,0.221,32,0.298,33,0.738,34,1.063,35,1.063,36,1.15,37,1.175,38,0.864,39,0.76,40,0.864,41,0.679,42,0.864,43,0.679,44,0.864,45,0.864,46,0.624,47,0.864,48,0.571,49,0.864,50,0.571,51,0.864,52,0.571,53,0.864,54,0.571,55,0.864,56,0.624,57,0.864,58,0.679,59,0.864,60,0.864,61,0.624,62,0.864,63,0.864,64,0.679,65,0.864,66,0.679,67,0.864,68,0.679,69,0.864,70,0.624,71,0.864,72,0.994,73,1.391,74,0.854,75,0.864,76,0.021,77,0.021,114,4.114,162,1.242,163,1.395,167,0.83,168,1.487,169,0.932,172,0.521,173,0.799,352,3.316,705,3.316,718,2.955,722,4.708,723,2.955,724,4.683,725,4.683,726,4.683,727,3.521,728,3.521,729,4.683]],["title/coverage.html",[730,3.724]],["body/coverage.html",[0,0.257,1,0.613,7,0.18,8,2.903,21,0.667,22,0.03,32,0.293,41,0.667,43,0.667,46,0.613,48,0.561,50,0.561,52,0.561,54,0.561,56,0.613,58,0.667,61,0.613,64,0.667,66,0.667,68,0.667,70,0.613,72,0.613,76,0.02,77,0.02,90,1.571,91,1.068,92,1.45,110,2.537,114,2.537,118,2.736,120,2.537,122,2.263,124,2.263,126,2.263,132,2.537,135,2.537,140,1.242,161,2.903,175,2.903,176,2.903,182,2.903,188,2.022,189,3.395,203,1.068,215,1.94,225,1.252,226,2.102,241,2.903,242,2.903,294,2.045,296,1.707,306,2.263,339,3.127,340,2.903,396,2.903,414,2.903,456,2.903,512,2.903,524,2.903,555,5.494,606,2.903,626,2.903,627,2.903,633,3.395,635,2.263,639,2.903,644,2.903,645,2.903,655,2.903,661,3.395,690,2.903,696,2.903,702,2.903,705,2.045,721,2.903,722,2.903,723,2.903,730,2.903,731,2.903,732,3.459,733,3.459,734,3.459,735,6.2,736,4.629,737,4.629,738,4.629,739,3.459,740,3.459,741,3.459,742,3.459,743,3.459,744,3.459,745,4.629,746,4.629,747,2.903,748,3.459,749,3.459,750,3.459,751,3.459,752,3.459,753,3.459,754,3.459,755,4.629,756,4.629,757,2.903,758,3.459,759,2.903,760,3.395,761,4.629,762,2.903,763,3.459]],["title/dependencies.html",[80,2.311,764,2.713]],["body/dependencies.html",[22,0.03,30,0.545,76,0.024,77,0.024,80,2.659,97,3.775,99,4.594,100,4.015,103,3.775,150,2.422,250,3.775,406,3.582,424,2.943,765,4.498,766,6.586,767,4.498,768,4.498,769,4.498,770,4.498,771,4.498,772,4.498,773,4.498,774,4.498,775,4.498,776,4.498,777,5.474,778,4.498,779,4.498,780,4.498,781,4.498,782,4.498,783,4.498,784,4.498,785,3.775,786,4.498,787,4.498,788,4.498,789,4.498]],["title/index.html",[17,0.199,790,2.713,791,2.277]],["body/index.html",[0,0.193,3,0.172,5,0.282,7,0.065,11,0.707,19,1.001,22,0.029,23,0.652,24,0.703,25,0.861,34,0.282,35,0.282,39,0.342,73,1.006,74,0.446,76,0.009,77,0.009,80,1.627,95,0.912,138,1.772,157,0.384,172,0.184,183,1.772,192,1.949,196,0.446,202,1.121,206,0.565,215,2.004,218,2.116,219,1.89,220,0.735,227,1.137,240,2.489,257,2.334,258,2.488,259,3.388,260,3.25,262,1.381,263,1.548,265,1.257,269,0.735,270,3.549,271,2.018,272,0.67,276,2.755,279,2.309,282,0.735,300,3.534,302,3.388,306,1.381,313,0.912,317,0.67,318,0.912,319,0.912,335,1.044,341,1.718,346,0.735,352,0.735,364,0.735,366,1.8,371,1.473,376,2.309,392,4.329,397,1.381,398,1.381,399,1.044,409,1.044,410,2.148,423,1.548,424,0.814,428,0.912,430,0.912,442,3.978,444,4.48,461,0.735,464,0.912,504,1.772,507,0.912,508,4.462,510,3.877,511,1.044,529,4.766,532,1.044,572,2.722,573,1.381,578,1.772,587,1.772,593,1.772,594,1.044,618,1.772,638,2.379,676,2.018,677,2.379,680,1.548,688,2.018,708,1.044,731,2.309,785,3.314,791,1.772,792,2.111,793,1.243,794,3.949,795,3.633,796,3.633,797,1.243,798,1.243,799,1.243,800,1.243,801,1.243,802,3.949,803,1.044,804,3.243,805,5.047,806,2.111,807,1.243,808,1.243,809,2.751,810,1.243,811,2.111,812,6.581,813,3.243,814,1.243,815,1.243,816,5.047,817,4.211,818,4.431,819,3.949,820,1.243,821,2.751,822,2.111,823,2.111,824,1.243,825,1.243,826,1.243,827,2.751,828,2.751,829,1.243,830,1.243,831,2.111,832,1.243,833,2.111,834,3.049,835,2.111,836,2.111,837,4.431,838,1.243,839,1.243,840,2.751,841,1.243,842,1.243,843,2.111,844,2.111,845,1.243,846,1.243,847,3.633,848,2.111,849,1.243,850,1.243,851,1.243,852,1.243,853,4.431,854,1.243,855,2.751,856,2.111,857,1.243,858,1.243,859,1.243,860,1.243,861,1.243,862,1.243,863,1.243,864,3.243,865,1.243,866,1.243,867,2.111,868,4.211,869,1.243,870,1.243,871,1.243,872,2.751,873,1.243,874,3.243,875,2.111,876,3.243,877,2.111,878,2.309,879,6.084,880,1.243,881,2.111,882,2.111,883,1.243,884,1.243,885,2.111,886,2.751,887,2.111,888,3.949,889,2.751,890,1.243,891,1.243,892,1.243,893,1.243,894,1.243,895,2.111,896,2.751,897,3.949,898,3.633,899,1.243,900,1.243,901,1.243,902,1.243,903,1.243,904,3.243,905,1.243,906,1.243,907,1.243,908,3.633,909,1.243,910,3.243,911,1.243,912,2.111,913,1.243,914,1.243,915,3.243,916,2.111,917,1.243,918,1.243,919,1.243,920,2.111,921,1.243,922,3.633,923,3.633,924,2.751,925,3.243,926,3.243,927,2.751,928,4.781,929,1.243,930,2.111,931,1.243,932,1.243,933,1.243,934,1.243,935,1.243,936,2.111,937,2.751,938,2.751,939,2.111,940,1.243,941,1.243,942,1.243,943,1.243,944,1.243,945,2.751,946,2.111,947,1.243,948,1.243,949,3.633,950,1.243,951,1.243,952,1.243,953,1.243,954,1.243,955,1.243,956,1.243,957,1.243,958,5.047,959,1.772,960,2.111,961,1.243,962,2.111,963,2.111,964,1.243,965,1.243,966,1.243,967,1.243,968,1.243,969,1.243,970,1.243,971,4.781,972,4.619,973,2.111,974,1.243,975,4.923,976,1.243,977,1.243,978,1.243,979,1.243,980,1.243,981,1.243,982,1.243,983,2.111,984,1.243,985,1.243,986,1.243,987,1.243,988,1.243,989,1.243,990,3.243,991,1.243,992,6.058,993,4.781,994,4.781,995,4.781,996,4.781,997,3.633,998,1.243,999,1.243,1000,1.243,1001,1.243,1002,1.243,1003,1.243,1004,3.243,1005,2.751,1006,1.243,1007,2.751,1008,1.243,1009,1.243,1010,1.243,1011,1.243,1012,1.243,1013,1.243,1014,1.243,1015,1.243,1016,1.243,1017,1.243,1018,1.243,1019,1.243,1020,2.111,1021,1.243]],["title/modules.html",[78,2.19]],["body/modules.html",[22,0.026,76,0.026,77,0.026,78,2.544,79,3.372,89,3.047,100,3.78,803,4.98,834,4.326,1022,5.154,1023,5.154,1024,5.154]],["title/overview.html",[1025,3.724]],["body/overview.html",[0,0.157,1,1.119,22,0.029,31,0.25,32,0.339,33,0.837,46,0.991,48,0.907,50,0.907,52,0.907,54,0.907,56,0.991,61,0.991,70,0.991,72,0.991,76,0.022,77,0.022,78,2.511,79,4.467,80,2.363,81,3.355,82,3.355,83,3.355,84,3.355,85,3.355,86,3.355,87,3.355,88,3.355,89,3.308,90,2.541,91,1.727,92,2.345,93,4.269,94,3.355,95,2.932,106,1.676,188,1.55,225,0.837,688,2.932,747,3.355,757,3.355,878,3.355,959,3.355,1025,3.355,1026,3.998]],["title/routes.html",[106,1.86]],["body/routes.html",[22,0.026,76,0.026,77,0.026,106,2.212]],["title/miscellaneous/variables.html",[760,2.867,1027,2.277]],["body/miscellaneous/variables.html",[17,0.342,21,1.078,22,0.029,23,1.725,24,1.861,76,0.025,77,0.025,199,2.115,215,2.705,244,4.692,302,4.1,362,2.753,365,3.673,389,2.508,538,4.692,759,3.908,760,3.415,762,3.908,1027,3.908,1028,4.657,1029,4.657,1030,5.59,1031,5.59,1032,5.59,1033,4.657,1034,4.657,1035,4.657,1036,4.657,1037,4.657]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":555,"title":{},"body":{"components/FlickrSearchComponent.html":{},"coverage.html":{}}}],["0.8.26",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":745,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":688,"title":{"interfaces/PhotoHashTable-1.html":{}},"body":{"index.html":{},"overview.html":{}}}],["1.18.3",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":757,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["2",{"_index":959,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.5.0",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["2.amazonaws.com/product",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.amazonaws.com/stag",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":878,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3/6",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3000",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":961,"title":{},"body":{"index.html":{}}}],["4.16.3",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["4/6",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1026,"title":{},"body":{"overview.html":{}}}],["5/8",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":743,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":747,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["6.0.0",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["6.3.1",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["6/9",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["7/12",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["8080:8080",{"_index":824,"title":{},"body":{"index.html":{}}}],["9",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["9._",{"_index":518,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["aaa",{"_index":863,"title":{},"body":{"index.html":{}}}],["accept",{"_index":307,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["account",{"_index":617,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["act",{"_index":210,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["activ",{"_index":973,"title":{},"body":{"index.html":{}}}],["activatedrout",{"_index":354,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["actual_compon",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["add",{"_index":942,"title":{},"body":{"index.html":{}}}],["agaisnt",{"_index":616,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["agil",{"_index":874,"title":{},"body":{"index.html":{}}}],["alert",{"_index":443,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["allow",{"_index":525,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["alreadi",{"_index":968,"title":{},"body":{"index.html":{}}}],["anchor",{"_index":978,"title":{},"body":{"index.html":{}}}],["angular",{"_index":853,"title":{},"body":{"index.html":{}}}],["angular.git",{"_index":810,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":815,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["angular/compil",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"dependencies.html":{}}}],["angular/express",{"_index":849,"title":{},"body":{"index.html":{}}}],["angular/form",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"dependencies.html":{}}}],["angular6",{"_index":836,"title":{},"body":{"index.html":{}}}],["api",{"_index":202,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["api.ap",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api.servic",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"injectables/FavouritesFactory.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["api.service.t",{"_index":242,"title":{},"body":{"injectables/FlickrApiService.html":{},"coverage.html":{}}}],["api.service.ts:16",{"_index":284,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["api.service.ts:17",{"_index":286,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["api.service.ts:18",{"_index":249,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["api.service.ts:49",{"_index":252,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["api/1.0.0",{"_index":903,"title":{},"body":{"index.html":{}}}],["api/flickr",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"coverage.html":{}}}],["apiurl",{"_index":244,"title":{},"body":{"injectables/FlickrApiService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["app.component.css",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":835,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":308,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["appmodul",{"_index":79,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":917,"title":{},"body":{"index.html":{}}}],["approutingmodul",{"_index":89,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["architectur",{"_index":676,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["aren't",{"_index":268,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["array",{"_index":323,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["artifact",{"_index":1015,"title":{},"body":{"index.html":{}}}],["ask",{"_index":583,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["assets/img/dragon_lines_w.png",{"_index":715,"title":{},"body":{"components/SidebarComponent.html":{}}}],["assets/img/flickr.png",{"_index":368,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/LayoutHeaderComponent.html":{}}}],["assets/img/flower_lines_w.png",{"_index":716,"title":{},"body":{"components/SidebarComponent.html":{}}}],["assets/img/stag_lines_w.png",{"_index":709,"title":{},"body":{"components/SidebarComponent.html":{}}}],["auth",{"_index":164,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth'},{'nam",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["auth.component.css",{"_index":165,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.html",{"_index":166,"title":{},"body":{"components/AuthComponent.html":{}}}],["authcompon",{"_index":41,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["authent",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["author",{"_index":457,"title":{},"body":{"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiItemContract.html":{}}}],["author_id",{"_index":458,"title":{},"body":{"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiItemContract.html":{}}}],["authour",{"_index":802,"title":{},"body":{"index.html":{}}}],["authouremail",{"_index":465,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["authouremail():str",{"_index":514,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["authournam",{"_index":466,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["authourname():str",{"_index":521,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["automat",{"_index":1011,"title":{},"body":{"index.html":{}}}],["avail",{"_index":834,"title":{},"body":{"index.html":{},"modules.html":{}}}],["aw",{"_index":855,"title":{},"body":{"index.html":{}}}],["back",{"_index":507,"title":{},"body":{"classes/FlickrPhoto.html":{},"components/FlickrTileComponent.html":{},"index.html":{}}}],["backend",{"_index":276,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["backlog",{"_index":927,"title":{},"body":{"index.html":{}}}],["backstopj",{"_index":877,"title":{},"body":{"index.html":{}}}],["bar",{"_index":1006,"title":{},"body":{"index.html":{}}}],["bdd",{"_index":904,"title":{},"body":{"index.html":{}}}],["bdd/tdd",{"_index":990,"title":{},"body":{"index.html":{}}}],["beanstalk",{"_index":852,"title":{},"body":{"index.html":{}}}],["befor",{"_index":587,"title":{},"body":{"components/FlickrSearchComponent.html":{},"index.html":{}}}],["between",{"_index":912,"title":{},"body":{"index.html":{}}}],["board",{"_index":799,"title":{},"body":{"index.html":{}}}],["bodi",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["boiler",{"_index":980,"title":{},"body":{"index.html":{}}}],["boilerpl",{"_index":979,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":473,"title":{},"body":{"classes/FlickrPhoto.html":{},"interfaces/SidebarItem.html":{}}}],["bootstrap",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["box",{"_index":549,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["branch",{"_index":897,"title":{},"body":{"index.html":{}}}],["broken",{"_index":964,"title":{},"body":{"index.html":{}}}],["brows",{"_index":803,"title":{},"body":{"index.html":{},"modules.html":{}}}],["browser",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["bug",{"_index":409,"title":{},"body":{"components/FlickrFavouritesComponent.html":{},"index.html":{}}}],["build",{"_index":819,"title":{},"body":{"index.html":{}}}],["built",{"_index":887,"title":{},"body":{"index.html":{}}}],["bulk",{"_index":673,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["busi",{"_index":937,"title":{},"body":{"index.html":{}}}],["button",{"_index":1004,"title":{},"body":{"index.html":{}}}],["cach",{"_index":199,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"miscellaneous/variables.html":{}}}],["cache/api",{"_index":380,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["call",{"_index":857,"title":{},"body":{"index.html":{}}}],["callback",{"_index":556,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["care",{"_index":379,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["catcherror",{"_index":291,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["chang",{"_index":594,"title":{},"body":{"components/FlickrSearchComponent.html":{},"index.html":{}}}],["check",{"_index":335,"title":{},"body":{"injectables/FlickrApiService.html":{},"index.html":{}}}],["chevron",{"_index":712,"title":{},"body":{"components/SidebarComponent.html":{}}}],["chosen",{"_index":842,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":891,"title":{},"body":{"index.html":{}}}],["ci",{"_index":866,"title":{},"body":{"index.html":{}}}],["ci/cd",{"_index":894,"title":{},"body":{"index.html":{}}}],["class",{"_index":32,"title":{"classes/FlickrPhoto.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cleartimeout",{"_index":558,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["cli",{"_index":813,"title":{},"body":{"index.html":{}}}],["click",{"_index":1003,"title":{},"body":{"index.html":{}}}],["client",{"_index":809,"title":{},"body":{"index.html":{}}}],["clone",{"_index":806,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":794,"title":{},"body":{"index.html":{}}}],["cognito",{"_index":861,"title":{},"body":{"index.html":{}}}],["collect",{"_index":940,"title":{},"body":{"index.html":{}}}],["comma",{"_index":548,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["commit",{"_index":933,"title":{},"body":{"index.html":{}}}],["compat",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["compnent",{"_index":342,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["compodoc",{"_index":831,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["components/app.compon",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["components/auth/auth.compon",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["components/auth/confirm",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["components/auth/forgot",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["components/auth/login/login.compon",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["components/auth/profile/profile.compon",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["components/auth/register/register.compon",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["components/container/container.compon",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["components/container/flickr",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/sidebar/sidebar",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["components/sidebar/sidebar.compon",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["configur",{"_index":580,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["confirm",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["confirmemailcompon",{"_index":43,"title":{"components/ConfirmEmailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["console.log('&#x1f44b",{"_index":299,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["console.log('&#x1f4aa",{"_index":301,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["console.log('&#x1f600",{"_index":303,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["console.log('this.favouritesfactory.photo",{"_index":621,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["console.log(errmsg",{"_index":455,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["const",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/FlickrPhoto.html":{}}}],["constructor",{"_index":169,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiItemContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["constructor(contract",{"_index":467,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["constructor(favouritesfactori",{"_index":610,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["constructor(flickrapi",{"_index":193,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{}}}],["constructor(http",{"_index":247,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["constructor(priv",{"_index":228,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["constructor(rout",{"_index":353,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["contact",{"_index":448,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["contain",{"_index":183,"title":{},"body":{"components/ContainerComponent.html":{},"index.html":{}}}],["container'},{'nam",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["container.component.css",{"_index":184,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.html",{"_index":185,"title":{},"body":{"components/ContainerComponent.html":{}}}],["containercompon",{"_index":46,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["content",{"_index":309,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["continu",{"_index":867,"title":{},"body":{"index.html":{}}}],["contract",{"_index":336,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["contract.author",{"_index":497,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.author_id",{"_index":499,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.date_taken",{"_index":491,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.descript",{"_index":493,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.link",{"_index":487,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.media.m",{"_index":489,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.photo_id",{"_index":503,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.publish",{"_index":495,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.tag",{"_index":501,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract.titl",{"_index":485,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["contract:iflickrapiitemcontract",{"_index":334,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["contracts/iflickrapiitemcontract",{"_index":482,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["cooki",{"_index":224,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["copi",{"_index":674,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["core",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cost",{"_index":913,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":730,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":259,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"index.html":{}}}],["critreria",{"_index":275,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["crumb",{"_index":369,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/LayoutHeaderComponent.html":{}}}],["crumb.titl",{"_index":654,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["css",{"_index":881,"title":{},"body":{"index.html":{}}}],["custom",{"_index":946,"title":{},"body":{"index.html":{}}}],["d",{"_index":822,"title":{},"body":{"index.html":{}}}],["dashboard",{"_index":370,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/LayoutHeaderComponent.html":{}}}],["data",{"_index":256,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["date_taken",{"_index":459,"title":{},"body":{"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiItemContract.html":{}}}],["deafult",{"_index":1000,"title":{},"body":{"index.html":{}}}],["debouncetim",{"_index":566,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["debouncetime(this.searchtimeout",{"_index":588,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["decid",{"_index":679,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["declar",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoupl",{"_index":382,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["default",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/LayoutHeaderComponent.html":{},"injectables/PhotoCache.html":{},"components/SidebarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["delay",{"_index":537,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["deliv",{"_index":955,"title":{},"body":{"index.html":{}}}],["demo",{"_index":793,"title":{},"body":{"index.html":{}}}],["depend",{"_index":80,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy",{"_index":868,"title":{},"body":{"index.html":{}}}],["descript",{"_index":341,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["design",{"_index":922,"title":{},"body":{"index.html":{}}}],["desktopa",{"_index":1005,"title":{},"body":{"index.html":{}}}],["desktopbdd/tdd",{"_index":998,"title":{},"body":{"index.html":{}}}],["desktopcod",{"_index":1008,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":231,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["detail",{"_index":258,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["details'},{'nam",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["details.compon",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["details.component.css",{"_index":347,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["details.component.html",{"_index":348,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["details.component.t",{"_index":340,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:30",{"_index":372,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["details.component.ts:50",{"_index":363,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["details.component.ts:57",{"_index":356,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["details.component.ts:58",{"_index":355,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["details.component.ts:63",{"_index":361,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["details.component.ts:75",{"_index":357,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["details/flickr",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FlickrDetailsComponent.html":{},"coverage.html":{}}}],["dev",{"_index":1009,"title":{},"body":{"index.html":{}}}],["dev/test/stag",{"_index":850,"title":{},"body":{"index.html":{}}}],["develop",{"_index":300,"title":{},"body":{"injectables/FlickrApiService.html":{},"index.html":{}}}],["di",{"_index":376,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"index.html":{}}}],["direct",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1014,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1017,"title":{},"body":{"index.html":{}}}],["display",{"_index":343,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["dist",{"_index":1016,"title":{},"body":{"index.html":{}}}],["distinctuntilchang",{"_index":567,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["do",{"_index":530,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["doc",{"_index":795,"title":{},"body":{"index.html":{}}}],["docker",{"_index":818,"title":{},"body":{"index.html":{}}}],["dockerhub",{"_index":869,"title":{},"body":{"index.html":{}}}],["document",{"_index":731,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["dont",{"_index":533,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["dotenv",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":965,"title":{},"body":{"index.html":{}}}],["dri",{"_index":375,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["driver",{"_index":893,"title":{},"body":{"index.html":{}}}],["duplic",{"_index":584,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["dynam",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["dynamodb",{"_index":511,"title":{},"body":{"classes/FlickrPhoto.html":{},"index.html":{}}}],["e.g",{"_index":956,"title":{},"body":{"index.html":{}}}],["e2",{"_index":817,"title":{},"body":{"index.html":{}}}],["each",{"_index":262,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["elasticbeanstalk",{"_index":871,"title":{},"body":{"index.html":{}}}],["element",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["email",{"_index":177,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"classes/FlickrPhoto.html":{}}}],["email'},{'nam",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["email.compon",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["email.component.css",{"_index":178,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.html",{"_index":179,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.t",{"_index":176,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"coverage.html":{}}}],["email.component.ts:12",{"_index":181,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:8",{"_index":180,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email/confirm",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmEmailComponent.html":{},"coverage.html":{}}}],["emails[0",{"_index":520,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["enagg",{"_index":951,"title":{},"body":{"index.html":{}}}],["end",{"_index":908,"title":{},"body":{"index.html":{}}}],["enough",{"_index":969,"title":{},"body":{"index.html":{}}}],["enter",{"_index":977,"title":{},"body":{"index.html":{}}}],["entir",{"_index":570,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["env",{"_index":935,"title":{},"body":{"index.html":{}}}],["environ",{"_index":215,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":283,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["environment.searchtimeout",{"_index":564,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["environments/environ",{"_index":216,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["epic",{"_index":958,"title":{},"body":{"index.html":{}}}],["err",{"_index":439,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["errmsg",{"_index":449,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["error",{"_index":424,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"dependencies.html":{},"index.html":{}}}],["error.messag",{"_index":453,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["error.statu",{"_index":451,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["error.statustext",{"_index":452,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["error.tostr",{"_index":454,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["escal",{"_index":447,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["even",{"_index":266,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["event",{"_index":983,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":346,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["execut",{"_index":1020,"title":{},"body":{"index.html":{}}}],["expect",{"_index":971,"title":{},"body":{"index.html":{}}}],["experi",{"_index":966,"title":{},"body":{"index.html":{}}}],["export",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"overview.html":{}}}],["express",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["expressj",{"_index":840,"title":{},"body":{"index.html":{}}}],["extrem",{"_index":918,"title":{},"body":{"index.html":{}}}],["fa",{"_index":711,"title":{},"body":{"components/SidebarComponent.html":{}}}],["facad",{"_index":212,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["facade/cach",{"_index":678,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["factori",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"injectables/FavouritesFactory.html":{},"components/FlickrDetailsComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["fail",{"_index":423,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["fals",{"_index":389,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":800,"title":{},"body":{"index.html":{}}}],["favicon",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["favourit",{"_index":218,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrFavouritesComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["favourites'},{'nam",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["favourites.compon",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["favourites.component.css",{"_index":400,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["favourites.component.html",{"_index":401,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["favourites.component.t",{"_index":396,"title":{},"body":{"components/FlickrFavouritesComponent.html":{},"coverage.html":{}}}],["favourites.component.ts:30",{"_index":405,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["favourites.component.ts:50",{"_index":404,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["favourites.component.ts:57",{"_index":402,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["favourites.component.ts:62",{"_index":403,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["favourites/flickr",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FlickrFavouritesComponent.html":{},"coverage.html":{}}}],["favouritesfactori",{"_index":90,"title":{"injectables/FavouritesFactory.html":{}},"body":{"modules/AppModule.html":{},"injectables/FavouritesFactory.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrTileComponent.html":{},"interfaces/PhotoHashTable.html":{},"coverage.html":{},"overview.html":{}}}],["favuorit",{"_index":239,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["favuoritesand",{"_index":200,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{}}}],["featur",{"_index":829,"title":{},"body":{"index.html":{}}}],["feed",{"_index":371,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"index.html":{}}}],["feedback",{"_index":941,"title":{},"body":{"index.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":274,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrSearchComponent.html":{}}}],["finish",{"_index":801,"title":{},"body":{"index.html":{}}}],["first",{"_index":359,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["fix",{"_index":393,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["flag",{"_index":1019,"title":{},"body":{"index.html":{}}}],["flickr",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["flickr/search",{"_index":976,"title":{},"body":{"index.html":{}}}],["flickr/{mockimageid",{"_index":974,"title":{},"body":{"index.html":{}}}],["flickrapi",{"_index":197,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["flickrapiservic",{"_index":91,"title":{"injectables/FlickrApiService.html":{}},"body":{"modules/AppModule.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"coverage.html":{},"overview.html":{}}}],["flickrdetailscompon",{"_index":48,"title":{"components/FlickrDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["flickrfavouritescompon",{"_index":50,"title":{"components/FlickrFavouritesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["flickrfe",{"_index":332,"title":{},"body":{"injectables/FlickrApiService.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrFeedContract.html":{}}}],["flickrimag",{"_index":991,"title":{},"body":{"index.html":{}}}],["flickrlistcompon",{"_index":52,"title":{"components/FlickrListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["flickrphoto",{"_index":203,"title":{"classes/FlickrPhoto.html":{}},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"coverage.html":{}}}],["flickrphoto(contract",{"_index":338,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["flickrphotomodel",{"_index":217,"title":{},"body":{"injectables/FavouritesFactory.html":{},"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiItemContract.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["flickrsearchcompon",{"_index":54,"title":{"components/FlickrSearchComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["flickrtilecompon",{"_index":56,"title":{"components/FlickrTileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["flikr",{"_index":708,"title":{},"body":{"components/SidebarComponent.html":{},"index.html":{}}}],["focu",{"_index":954,"title":{},"body":{"index.html":{}}}],["follow",{"_index":915,"title":{},"body":{"index.html":{}}}],["forgot",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["forgotpasswordcompon",{"_index":58,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["formsmodul",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":360,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["framework",{"_index":839,"title":{},"body":{"index.html":{}}}],["front",{"_index":907,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":906,"title":{},"body":{"index.html":{}}}],["full",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":963,"title":{},"body":{"index.html":{}}}],["furthermor",{"_index":640,"title":{},"body":{"interfaces/IFlickrApiItemContract.html":{}}}],["futur",{"_index":222,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["g",{"_index":814,"title":{},"body":{"index.html":{}}}],["gateway",{"_index":856,"title":{},"body":{"index.html":{}}}],["gener",{"_index":638,"title":{},"body":{"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrFeedContract.html":{},"index.html":{}}}],["get",{"_index":790,"title":{"index.html":{}},"body":{}}],["getal",{"_index":190,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["getall(searchterm",{"_index":251,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["getallerror",{"_index":417,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["getallerror(error",{"_index":421,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["getallphoto",{"_index":418,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["getallphotos.subscrib",{"_index":437,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["getallsuccess",{"_index":419,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["getallsuccess(photo",{"_index":426,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["getbyid",{"_index":662,"title":{},"body":{"injectables/PhotoCache.html":{}}}],["getbyid(id",{"_index":666,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["getphoto",{"_index":351,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["gi",{"_index":519,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["gif",{"_index":999,"title":{},"body":{"index.html":{}}}],["git",{"_index":807,"title":{},"body":{"index.html":{}}}],["github",{"_index":875,"title":{},"body":{"index.html":{}}}],["give",{"_index":445,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["given",{"_index":684,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["global",{"_index":211,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["go",{"_index":677,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["good",{"_index":992,"title":{},"body":{"index.html":{}}}],["grab",{"_index":358,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["graph",{"_index":1024,"title":{},"body":{"modules.html":{}}}],["hack",{"_index":391,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["handl",{"_index":859,"title":{},"body":{"index.html":{}}}],["header",{"_index":245,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/LayoutHeaderComponent.html":{}}}],["header'},{'nam",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["header.compon",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["header.component.css",{"_index":646,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["header.component.html",{"_index":647,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["header.component.t",{"_index":645,"title":{},"body":{"components/LayoutHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:10",{"_index":652,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["header.component.ts:11",{"_index":650,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["header.component.ts:12",{"_index":649,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["header.component.ts:14",{"_index":648,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["header.component.ts:18",{"_index":653,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["header/layout",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"components/LayoutHeaderComponent.html":{},"coverage.html":{}}}],["help",{"_index":949,"title":{},"body":{"index.html":{}}}],["helper",{"_index":672,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["here",{"_index":847,"title":{},"body":{"index.html":{}}}],["hide",{"_index":430,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["home",{"_index":970,"title":{},"body":{"index.html":{}}}],["hook",{"_index":987,"title":{},"body":{"index.html":{}}}],["host",{"_index":873,"title":{},"body":{"index.html":{}}}],["hover",{"_index":1001,"title":{},"body":{"index.html":{}}}],["html",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["http",{"_index":250,"title":{},"body":{"injectables/FlickrApiService.html":{},"dependencies.html":{}}}],["http://localhost:4200",{"_index":1010,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":248,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["httpclientmodul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":374,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["httpheader",{"_index":285,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["httpparam",{"_index":289,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["httprequest",{"_index":287,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["httprespons",{"_index":288,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["https://app.swaggerhub.com/apis/kitset",{"_index":901,"title":{},"body":{"index.html":{}}}],["https://github.com/mitni455/isentia",{"_index":808,"title":{},"body":{"index.html":{}}}],["https://l70217a84b.execut",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hub",{"_index":870,"title":{},"body":{"index.html":{}}}],["iam",{"_index":862,"title":{},"body":{"index.html":{}}}],["icon",{"_index":710,"title":{},"body":{"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{}}}],["id",{"_index":227,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrFavouritesComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["identifi",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["if(searchterm",{"_index":326,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["if(this.photo.isfavourit",{"_index":619,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["iflickrapicontract",{"_index":294,"title":{"interfaces/IFlickrApiContract.html":{}},"body":{"injectables/FlickrApiService.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrFeedContract.html":{},"coverage.html":{}}}],["iflickrapiitem",{"_index":261,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["iflickrapiitemcontract",{"_index":296,"title":{"interfaces/IFlickrApiItemContract.html":{}},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"coverage.html":{}}}],["iflickrfeedcontract",{"_index":635,"title":{"interfaces/IFlickrFeedContract.html":{}},"body":{"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrFeedContract.html":{},"coverage.html":{}}}],["ignor",{"_index":589,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["imag",{"_index":510,"title":{},"body":{"classes/FlickrPhoto.html":{},"index.html":{}}}],["imgsrc",{"_index":367,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{}}}],["implement",{"_index":162,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["import",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["improv",{"_index":950,"title":{},"body":{"index.html":{}}}],["includ",{"_index":916,"title":{},"body":{"index.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"miscellaneous/variables.html":{}}}],["indexof(photo.photo_id",{"_index":235,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{}}}],["inform",{"_index":344,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["init",{"_index":577,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["initialis",{"_index":641,"title":{},"body":{"interfaces/IFlickrApiItemContract.html":{}}}],["inject",{"_index":188,"title":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"injectables/PhotoCache.html":{}},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":352,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrTileComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["insid",{"_index":854,"title":{},"body":{"index.html":{}}}],["inspir",{"_index":399,"title":{},"body":{"components/FlickrFavouritesComponent.html":{},"index.html":{}}}],["instal",{"_index":804,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":450,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["integr",{"_index":240,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["interfac",{"_index":225,"title":{"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"interfaces/SidebarItem.html":{}},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"interfaces/SidebarItem.html":{},"coverage.html":{},"overview.html":{}}}],["interv",{"_index":581,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["io/isentia",{"_index":902,"title":{},"body":{"index.html":{}}}],["isdevmod",{"_index":214,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["isentia",{"_index":821,"title":{},"body":{"index.html":{}}}],["isfavourit",{"_index":460,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["isfavourite:boolean",{"_index":483,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["isload",{"_index":349,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["isselect",{"_index":714,"title":{},"body":{"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{}}}],["issu",{"_index":828,"title":{},"body":{"index.html":{}}}],["item",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["item.compon",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.css",{"_index":724,"title":{},"body":{"components/SidebarItemComponent.html":{}}}],["item.component.html",{"_index":725,"title":{},"body":{"components/SidebarItemComponent.html":{}}}],["item.component.t",{"_index":723,"title":{},"body":{"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:13",{"_index":726,"title":{},"body":{"components/SidebarItemComponent.html":{}}}],["item.component.ts:17",{"_index":727,"title":{},"body":{"components/SidebarItemComponent.html":{}}}],["item/sidebar",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["jasmin",{"_index":885,"title":{},"body":{"index.html":{}}}],["jasmine/karma",{"_index":884,"title":{},"body":{"index.html":{}}}],["jira",{"_index":948,"title":{},"body":{"index.html":{}}}],["join",{"_index":329,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["js",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":318,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"index.html":{}}}],["karma",{"_index":886,"title":{},"body":{"index.html":{}}}],["kayla",{"_index":957,"title":{},"body":{"index.html":{}}}],["key",{"_index":988,"title":{},"body":{"index.html":{}}}],["lambda",{"_index":844,"title":{},"body":{"index.html":{}}}],["landscap",{"_index":995,"title":{},"body":{"index.html":{}}}],["laptop",{"_index":997,"title":{},"body":{"index.html":{}}}],["layout",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["layout/layout",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["layoutheadercompon",{"_index":61,"title":{"components/LayoutHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"overview.html":{}}}],["less",{"_index":314,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["librari",{"_index":320,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["lifecycl",{"_index":910,"title":{},"body":{"index.html":{}}}],["link",{"_index":461,"title":{},"body":{"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"index.html":{}}}],["list",{"_index":257,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["list'},{'nam",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["list.compon",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.css",{"_index":415,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list.component.html",{"_index":416,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list.component.t",{"_index":414,"title":{},"body":{"components/FlickrListComponent.html":{},"coverage.html":{}}}],["list.component.ts:23",{"_index":434,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list.component.ts:39",{"_index":433,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list.component.ts:46",{"_index":420,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list.component.ts:51",{"_index":432,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list.component.ts:63",{"_index":425,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list.component.ts:81",{"_index":427,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list.component.ts:96",{"_index":422,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["list/flickr",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FlickrListComponent.html":{},"components/FlickrTileComponent.html":{},"coverage.html":{}}}],["liter",{"_index":642,"title":{},"body":{"interfaces/IFlickrApiItemContract.html":{}}}],["load",{"_index":366,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["local",{"_index":206,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["login",{"_index":656,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["login.component.css",{"_index":657,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":658,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":64,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["look",{"_index":508,"title":{},"body":{"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["m",{"_index":643,"title":{},"body":{"interfaces/IFlickrApiItemContract.html":{}}}],["make",{"_index":312,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["manag",{"_index":860,"title":{},"body":{"index.html":{}}}],["map",{"_index":267,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["map(r",{"_index":331,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["master",{"_index":896,"title":{},"body":{"index.html":{}}}],["match",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":462,"title":{},"body":{"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiItemContract.html":{}}}],["menu",{"_index":1007,"title":{},"body":{"index.html":{}}}],["merg",{"_index":934,"title":{},"body":{"index.html":{}}}],["messag",{"_index":431,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["meta",{"_index":255,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["method",{"_index":167,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["methodolog",{"_index":944,"title":{},"body":{"index.html":{}}}],["microservic",{"_index":843,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":1027,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mobil",{"_index":993,"title":{},"body":{"index.html":{}}}],["mocha",{"_index":882,"title":{},"body":{"index.html":{}}}],["mock",{"_index":975,"title":{},"body":{"index.html":{}}}],["model",{"_index":265,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["model:flickrphoto",{"_index":337,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["models/contracts/iflickrapicontract",{"_index":295,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["models/contracts/iflickrapiitemcontract",{"_index":297,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["models/factories/favouritesfactori",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrTileComponent.html":{}}}],["models/factories/photocach",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["models/flickrphotomodel",{"_index":298,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{}}}],["models/sidebaritemmodel",{"_index":718,"title":{},"body":{"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["modifi",{"_index":637,"title":{},"body":{"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrFeedContract.html":{}}}],["modul",{"_index":78,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":313,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"index.html":{}}}],["morgan",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["ms",{"_index":557,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["names[1",{"_index":523,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["narrow",{"_index":322,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["navig",{"_index":962,"title":{},"body":{"index.html":{}}}],["need",{"_index":895,"title":{},"body":{"index.html":{}}}],["new",{"_index":306,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrSearchComponent.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":816,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":168,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["npm",{"_index":811,"title":{},"body":{"index.html":{}}}],["object",{"_index":365,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":282,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["on",{"_index":269,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["onc",{"_index":429,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["oninit",{"_index":163,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["onlin",{"_index":792,"title":{},"body":{"index.html":{}}}],["open",{"_index":1002,"title":{},"body":{"index.html":{}}}],["option",{"_index":196,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/SidebarItem.html":{},"index.html":{}}}],["ourselv",{"_index":534,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["out",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":982,"title":{},"body":{"index.html":{}}}],["overkil",{"_index":846,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1025,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":938,"title":{},"body":{"index.html":{}}}],["p",{"_index":823,"title":{},"body":{"index.html":{}}}],["packag",{"_index":764,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":529,"title":{},"body":{"components/FlickrSearchComponent.html":{},"index.html":{}}}],["param",{"_index":321,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["paramet",{"_index":195,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{}}}],["parammap",{"_index":373,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["parent",{"_index":967,"title":{},"body":{"index.html":{}}}],["parser",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["pass",{"_index":260,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"index.html":{}}}],["password",{"_index":628,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password'},{'nam",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["password.compon",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["password.component.css",{"_index":629,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.html",{"_index":630,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.t",{"_index":627,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:12",{"_index":632,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:8",{"_index":631,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password/forgot",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["past",{"_index":675,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["path",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{}}}],["pathmatch",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["period",{"_index":586,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["persona",{"_index":952,"title":{},"body":{"index.html":{}}}],["phantomj",{"_index":890,"title":{},"body":{"index.html":{}}}],["phase",{"_index":929,"title":{},"body":{"index.html":{}}}],["photo",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["photo'",{"_index":254,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["photo.authournam",{"_index":625,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["photo.photo_id",{"_index":686,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["photo.titl",{"_index":624,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["photo/:photoid",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["photo/favourit",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SidebarComponent.html":{}}}],["photo/search",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SidebarComponent.html":{}}}],["photo_id",{"_index":463,"title":{},"body":{"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiItemContract.html":{}}}],["photocach",{"_index":92,"title":{"injectables/PhotoCache.html":{}},"body":{"modules/AppModule.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"coverage.html":{},"overview.html":{}}}],["photohasht",{"_index":226,"title":{"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrFavouritesComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"coverage.html":{}}}],["photoid",{"_index":350,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["photoitem.photo_id",{"_index":234,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["photos.foreach(photo",{"_index":681,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["photosrepres",{"_index":253,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["photot",{"_index":412,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["pictur",{"_index":833,"title":{},"body":{"index.html":{}}}],["pin",{"_index":798,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":311,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["pipelin",{"_index":899,"title":{},"body":{"index.html":{}}}],["plan",{"_index":924,"title":{},"body":{"index.html":{}}}],["plate",{"_index":981,"title":{},"body":{"index.html":{}}}],["platform",{"_index":851,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":825,"title":{},"body":{"index.html":{}}}],["portrait",{"_index":994,"title":{},"body":{"index.html":{}}}],["predefin",{"_index":574,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["prefer",{"_index":883,"title":{},"body":{"index.html":{}}}],["previou",{"_index":591,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["privat",{"_index":243,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["probabl",{"_index":845,"title":{},"body":{"index.html":{}}}],["prod",{"_index":1018,"title":{},"body":{"index.html":{}}}],["product",{"_index":302,"title":{},"body":{"injectables/FlickrApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":691,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile'},{'nam",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["profile.component.css",{"_index":692,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.html",{"_index":693,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecompon",{"_index":66,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["program",{"_index":919,"title":{},"body":{"index.html":{}}}],["project",{"_index":876,"title":{},"body":{"index.html":{}}}],["properti",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"injectables/PhotoCache.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{}}}],["protractor",{"_index":889,"title":{},"body":{"index.html":{}}}],["provid",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["psd/sketch",{"_index":931,"title":{},"body":{"index.html":{}}}],["public",{"_index":279,"title":{},"body":{"injectables/FlickrApiService.html":{},"index.html":{}}}],["publish",{"_index":464,"title":{},"body":{"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiItemContract.html":{},"index.html":{}}}],["pull",{"_index":680,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["push",{"_index":572,"title":{},"body":{"components/FlickrSearchComponent.html":{},"index.html":{}}}],["qualiti",{"_index":914,"title":{},"body":{"index.html":{}}}],["queri",{"_index":278,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["queryparam",{"_index":246,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["quick",{"_index":397,"title":{},"body":{"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["quickli",{"_index":848,"title":{},"body":{"index.html":{}}}],["rais",{"_index":826,"title":{},"body":{"index.html":{}}}],["readm",{"_index":1021,"title":{},"body":{"index.html":{}}}],["receiv",{"_index":985,"title":{},"body":{"index.html":{}}}],["redirectto",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redund",{"_index":315,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["refactor",{"_index":532,"title":{},"body":{"components/FlickrSearchComponent.html":{},"index.html":{}}}],["refresh",{"_index":201,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrDetailsComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["regist",{"_index":697,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register'},{'nam",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["register.component.css",{"_index":698,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":699,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercompon",{"_index":68,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["regress",{"_index":880,"title":{},"body":{"index.html":{}}}],["reload",{"_index":1012,"title":{},"body":{"index.html":{}}}],["remov",{"_index":191,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrFavouritesComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["remove(photo",{"_index":204,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["removeindex",{"_index":232,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["repeat",{"_index":528,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["repo",{"_index":796,"title":{},"body":{"index.html":{}}}],["repres",{"_index":310,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["request",{"_index":827,"title":{},"body":{"index.html":{}}}],["res.flickrfeed.items.map(item",{"_index":333,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["reset",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resourc",{"_index":841,"title":{},"body":{"index.html":{}}}],["respons",{"_index":263,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"index.html":{}}}],["result",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrospect",{"_index":939,"title":{},"body":{"index.html":{}}}],["return",{"_index":172,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["review",{"_index":936,"title":{},"body":{"index.html":{}}}],["right",{"_index":713,"title":{},"body":{"components/SidebarComponent.html":{}}}],["role",{"_index":945,"title":{},"body":{"index.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["rout",{"_index":106,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"overview.html":{},"routes.html":{}}}],["routermodul",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":805,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":406,"title":{},"body":{"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"dependencies.html":{}}}],["rxjs/observ",{"_index":290,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["rxjs/oper",{"_index":293,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrSearchComponent.html":{}}}],["same",{"_index":590,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["sampl",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["save",{"_index":192,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["save(photo",{"_index":208,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["saveal",{"_index":663,"title":{},"body":{"injectables/PhotoCache.html":{}}}],["saveall(photo",{"_index":670,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["say",{"_index":953,"title":{},"body":{"index.html":{}}}],["scaffold",{"_index":1013,"title":{},"body":{"index.html":{}}}],["schema",{"_index":319,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"index.html":{}}}],["screenshot",{"_index":797,"title":{},"body":{"index.html":{}}}],["scrum",{"_index":943,"title":{},"body":{"index.html":{}}}],["search",{"_index":270,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrSearchComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["search'},{'nam",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["search(tag",{"_index":544,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.compon",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["search.component.css",{"_index":535,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.html",{"_index":536,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.t",{"_index":524,"title":{},"body":{"components/FlickrSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:120",{"_index":560,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:129",{"_index":545,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:150",{"_index":547,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:169",{"_index":553,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:185",{"_index":551,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:34",{"_index":562,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:54",{"_index":561,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:62",{"_index":563,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:76",{"_index":542,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search.component.ts:97",{"_index":543,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["search/flickr",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FlickrSearchComponent.html":{},"coverage.html":{}}}],["searchphoto",{"_index":601,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchphotos.subscrib",{"_index":603,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchphotosbytag",{"_index":539,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchphotosbytags(tag",{"_index":546,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchphotoserror",{"_index":540,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchphotoserror(error",{"_index":550,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchphotossuccess",{"_index":541,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchphotossuccess(photo",{"_index":552,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchtag",{"_index":576,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["searchterm",{"_index":280,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["searchtimeout",{"_index":538,"title":{},"body":{"components/FlickrSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":972,"title":{},"body":{"index.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["self",{"_index":316,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{}}}],["send",{"_index":506,"title":{},"body":{"classes/FlickrPhoto.html":{},"components/FlickrTileComponent.html":{}}}],["sent",{"_index":273,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["seper",{"_index":526,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["serv",{"_index":785,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["serveless",{"_index":858,"title":{},"body":{"index.html":{}}}],["server",{"_index":618,"title":{},"body":{"components/FlickrTileComponent.html":{},"index.html":{}}}],["servic",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["services/flickr",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"injectables/FavouritesFactory.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["set",{"_index":504,"title":{},"body":{"classes/FlickrPhoto.html":{},"index.html":{}}}],["settimeout(callback",{"_index":559,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["setup",{"_index":578,"title":{},"body":{"components/FlickrSearchComponent.html":{},"index.html":{}}}],["share",{"_index":213,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["show",{"_index":392,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"index.html":{}}}],["sidebar",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["sidebar'},{'nam",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["sidebar.component.css",{"_index":719,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.css,sidebar.component.responsive.css",{"_index":703,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":704,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.responsive.css",{"_index":720,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcompon",{"_index":70,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebaritem",{"_index":705,"title":{"interfaces/SidebarItem.html":{}},"body":{"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["sidebaritem.titl",{"_index":729,"title":{},"body":{"components/SidebarItemComponent.html":{}}}],["sidebaritem:sidebaritem",{"_index":728,"title":{},"body":{"components/SidebarItemComponent.html":{}}}],["sidebaritemcompon",{"_index":72,"title":{"components/SidebarItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simpl",{"_index":837,"title":{},"body":{"index.html":{}}}],["singl",{"_index":345,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["small",{"_index":569,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["solv",{"_index":446,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"index.html":{}}}],["southeast",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spa",{"_index":838,"title":{},"body":{"index.html":{}}}],["space",{"_index":527,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["splice",{"_index":407,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["split",{"_index":909,"title":{},"body":{"index.html":{}}}],["sprint",{"_index":923,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.t",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.module.t",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/components/app.component.ts:9",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/components/auth/auth.component.t",{"_index":161,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/auth.component.ts:12",{"_index":171,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/components/auth/auth.component.ts:8",{"_index":170,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/components/auth/confirm",{"_index":175,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/forgot",{"_index":626,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/login/login.component.t",{"_index":655,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/login/login.component.ts:12",{"_index":660,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/auth/login/login.component.ts:8",{"_index":659,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/auth/profile/profile.component.t",{"_index":690,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/profile/profile.component.ts:12",{"_index":695,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/auth/profile/profile.component.ts:8",{"_index":694,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/auth/register/register.component.t",{"_index":696,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/register/register.component.ts:12",{"_index":701,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/auth/register/register.component.ts:8",{"_index":700,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/container/container.component.t",{"_index":182,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["src/app/components/container/container.component.ts:12",{"_index":187,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/components/container/container.component.ts:8",{"_index":186,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/components/container/flickr",{"_index":339,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"coverage.html":{}}}],["src/app/components/sidebar/sidebar",{"_index":722,"title":{},"body":{"components/SidebarItemComponent.html":{},"coverage.html":{}}}],["src/app/components/sidebar/sidebar.component.t",{"_index":702,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:15",{"_index":717,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:35",{"_index":706,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:41",{"_index":707,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layout/layout",{"_index":644,"title":{},"body":{"components/LayoutHeaderComponent.html":{},"coverage.html":{}}}],["src/app/models/contracts/iflickrapicontract.t",{"_index":633,"title":{},"body":{"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrFeedContract.html":{},"coverage.html":{}}}],["src/app/models/contracts/iflickrapiitemcontract.t",{"_index":639,"title":{},"body":{"interfaces/IFlickrApiItemContract.html":{},"coverage.html":{}}}],["src/app/models/factories/favouritesfactory.t",{"_index":189,"title":{},"body":{"injectables/FavouritesFactory.html":{},"interfaces/PhotoHashTable.html":{},"coverage.html":{}}}],["src/app/models/factories/favouritesfactory.ts:17",{"_index":687,"title":{},"body":{"interfaces/PhotoHashTable.html":{}}}],["src/app/models/factories/favouritesfactory.ts:24",{"_index":194,"title":{},"body":{"injectables/FavouritesFactory.html":{}}}],["src/app/models/factories/favouritesfactory.ts:38",{"_index":209,"title":{},"body":{"injectables/FavouritesFactory.html":{}}}],["src/app/models/factories/favouritesfactory.ts:51",{"_index":205,"title":{},"body":{"injectables/FavouritesFactory.html":{}}}],["src/app/models/factories/favouritesfactory.ts:68",{"_index":198,"title":{},"body":{"injectables/FavouritesFactory.html":{}}}],["src/app/models/factories/photocache.t",{"_index":661,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"coverage.html":{}}}],["src/app/models/factories/photocache.ts:19",{"_index":689,"title":{},"body":{"interfaces/PhotoHashTable-1.html":{}}}],["src/app/models/factories/photocache.ts:27",{"_index":664,"title":{},"body":{"injectables/PhotoCache.html":{}}}],["src/app/models/factories/photocache.ts:39",{"_index":671,"title":{},"body":{"injectables/PhotoCache.html":{}}}],["src/app/models/factories/photocache.ts:52",{"_index":669,"title":{},"body":{"injectables/PhotoCache.html":{}}}],["src/app/models/factories/photocache.ts:66",{"_index":668,"title":{},"body":{"injectables/PhotoCache.html":{}}}],["src/app/models/factories/photocache.ts:84",{"_index":665,"title":{},"body":{"injectables/PhotoCache.html":{}}}],["src/app/models/factories/photocache.ts:95",{"_index":667,"title":{},"body":{"injectables/PhotoCache.html":{}}}],["src/app/models/flickrphotomodel.t",{"_index":456,"title":{},"body":{"classes/FlickrPhoto.html":{},"coverage.html":{}}}],["src/app/models/flickrphotomodel.ts:14",{"_index":479,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:15",{"_index":474,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:16",{"_index":475,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:17",{"_index":471,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:18",{"_index":472,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:19",{"_index":477,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:20",{"_index":469,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:21",{"_index":470,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:22",{"_index":478,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:23",{"_index":476,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:24",{"_index":468,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:47",{"_index":480,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/flickrphotomodel.ts:53",{"_index":481,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["src/app/models/sidebaritemmodel.t",{"_index":721,"title":{},"body":{"interfaces/SidebarItem.html":{},"coverage.html":{}}}],["src/app/services/flickr",{"_index":241,"title":{},"body":{"injectables/FlickrApiService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":762,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tsconfig.app.json",{"_index":832,"title":{},"body":{"index.html":{}}}],["stage",{"_index":898,"title":{},"body":{"index.html":{}}}],["stager",{"_index":921,"title":{},"body":{"index.html":{}}}],["start",{"_index":791,"title":{"index.html":{}},"body":{"index.html":{}}}],["state",{"_index":364,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["statement",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["statuscod",{"_index":634,"title":{},"body":{"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrFeedContract.html":{}}}],["storag",{"_index":223,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["storagestrategi",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":220,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["stori",{"_index":928,"title":{},"body":{"index.html":{}}}],["strategi",{"_index":381,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["stream",{"_index":571,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["string",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"interfaces/SidebarItem.html":{}}}],["strongli",{"_index":636,"title":{},"body":{"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{}}}],["style",{"_index":394,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["subject",{"_index":565,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["subscrib",{"_index":989,"title":{},"body":{"index.html":{}}}],["success",{"_index":428,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["support",{"_index":1022,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":830,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1023,"title":{},"body":{"modules.html":{}}}],["swaggerhub",{"_index":872,"title":{},"body":{"index.html":{}}}],["switch",{"_index":592,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["switchmap",{"_index":568,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["switchmap((term",{"_index":595,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["sync",{"_index":207,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["t",{"_index":820,"title":{},"body":{"index.html":{}}}],["tabl",{"_index":512,"title":{},"body":{"classes/FlickrPhoto.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":996,"title":{},"body":{"index.html":{}}}],["tag",{"_index":272,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"interfaces/IFlickrApiItemContract.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["tags='+searchterms.split",{"_index":328,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["take",{"_index":378,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["tap",{"_index":292,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["tarnsform",{"_index":264,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{}}}],["temp",{"_index":390,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IFlickrApiItemContract.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["term",{"_index":271,"title":{},"body":{"injectables/FlickrApiService.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["test",{"_index":812,"title":{},"body":{"index.html":{}}}],["this.apiurl",{"_index":304,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["this.apiurl+'photo",{"_index":325,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["this.author",{"_index":496,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.author.match",{"_index":522,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.author.match(/([a",{"_index":515,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.author_id",{"_index":498,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.date_taken",{"_index":490,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.delay",{"_index":598,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.descript",{"_index":492,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.favouritesfactory.getal",{"_index":411,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["this.favouritesfactory.photo",{"_index":622,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["this.favouritesfactory.remove(this.photo",{"_index":623,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["this.favouritesfactory.save(this.photo",{"_index":620,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["this.flickrapi.destroyfavourite(photo",{"_index":238,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["this.flickrapi.getal",{"_index":436,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["this.flickrapi.getall(tag",{"_index":602,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.flickrapi.getall(term",{"_index":596,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.flickrapi.savefavourite(photo",{"_index":230,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["this.getallerror(err",{"_index":440,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["this.getallphoto",{"_index":435,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["this.getallsuccess(photo",{"_index":438,"title":{},"body":{"components/FlickrListComponent.html":{}}}],["this.getphoto",{"_index":377,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["this.head",{"_index":305,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["this.http.get",{"_index":330,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["this.isfavourit",{"_index":513,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.isload",{"_index":388,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["this.layout.titl",{"_index":386,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["this.link",{"_index":486,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.media",{"_index":488,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.photo",{"_index":236,"title":{},"body":{"injectables/FavouritesFactory.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["this.photo.isfavourit",{"_index":395,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrTileComponent.html":{}}}],["this.photo.titl",{"_index":387,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["this.photo_id",{"_index":502,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.photocache.getbyid(this.photoid",{"_index":385,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["this.photocache.saveall(this.photo",{"_index":441,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{}}}],["this.photoid",{"_index":383,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["this.photos.find(photo",{"_index":685,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["this.photos.map(photoitem",{"_index":233,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["this.photos.push(photo",{"_index":229,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["this.photos.push(phototable[id",{"_index":413,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["this.photos.splice(removeindex",{"_index":237,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["this.photos[photo.photo_id",{"_index":683,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["this.publish",{"_index":494,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.route.snapshot.parammap.get('photoid",{"_index":384,"title":{},"body":{"components/FlickrDetailsComponent.html":{}}}],["this.save(photo",{"_index":682,"title":{},"body":{"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["this.searchphotosbytags(tag",{"_index":599,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.searchphotoserror(err",{"_index":605,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.searchphotossuccess(photo",{"_index":604,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.searchtags.next(tag",{"_index":597,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.searchtags.pip",{"_index":585,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.searchtimeout",{"_index":600,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["this.tag",{"_index":500,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["this.titl",{"_index":484,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["thu",{"_index":531,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["tile",{"_index":410,"title":{},"body":{"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"index.html":{}}}],["tile'},{'nam",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["tile.compon",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["tile.component.css",{"_index":607,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["tile.component.html",{"_index":608,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["tile.component.t",{"_index":606,"title":{},"body":{"components/FlickrTileComponent.html":{},"coverage.html":{}}}],["tile.component.ts:13",{"_index":611,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["tile.component.ts:17",{"_index":612,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["tile.component.ts:28",{"_index":613,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["tile/flickr",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"components/FlickrTileComponent.html":{},"coverage.html":{}}}],["time",{"_index":593,"title":{},"body":{"components/FlickrSearchComponent.html":{},"index.html":{}}}],["timeout",{"_index":575,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["timer",{"_index":554,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["titl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"index.html":{}}}],["todo",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["toggl",{"_index":614,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["togglefavourit",{"_index":609,"title":{},"body":{"components/FlickrTileComponent.html":{}}}],["tool",{"_index":864,"title":{},"body":{"index.html":{}}}],["topic",{"_index":960,"title":{},"body":{"index.html":{}}}],["tradeoff",{"_index":911,"title":{},"body":{"index.html":{}}}],["travi",{"_index":865,"title":{},"body":{"index.html":{}}}],["travisci",{"_index":900,"title":{},"body":{"index.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["trello",{"_index":947,"title":{},"body":{"index.html":{}}}],["trigger",{"_index":984,"title":{},"body":{"index.html":{}}}],["true",{"_index":362,"title":{},"body":{"components/FlickrDetailsComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["turn",{"_index":277,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["type",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"components/LayoutHeaderComponent.html":{},"injectables/PhotoCache.html":{},"components/SidebarComponent.html":{},"interfaces/SidebarItem.html":{},"components/SidebarItemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typic",{"_index":920,"title":{},"body":{"index.html":{}}}],["ui",{"_index":926,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":327,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["unit",{"_index":888,"title":{},"body":{"index.html":{}}}],["unsav",{"_index":408,"title":{},"body":{"components/FlickrFavouritesComponent.html":{}}}],["up",{"_index":509,"title":{},"body":{"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{}}}],["updat",{"_index":505,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["url",{"_index":324,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["us",{"_index":219,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["user",{"_index":444,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["ux",{"_index":925,"title":{},"body":{"index.html":{}}}],["valid",{"_index":317,"title":{},"body":{"injectables/FlickrApiService.html":{},"classes/FlickrPhoto.html":{},"interfaces/IFlickrApiContract.html":{},"interfaces/IFlickrApiItemContract.html":{},"interfaces/IFlickrFeedContract.html":{},"index.html":{}}}],["valu",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/FavouritesFactory.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/LayoutHeaderComponent.html":{},"injectables/PhotoCache.html":{},"components/SidebarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FlickrApiService.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"classes/FlickrPhoto.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["variabl",{"_index":760,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":573,"title":{},"body":{"components/FlickrSearchComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{},"index.html":{}}}],["view",{"_index":398,"title":{},"body":{"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["visual",{"_index":879,"title":{},"body":{"index.html":{}}}],["void",{"_index":173,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ContainerComponent.html":{},"injectables/FavouritesFactory.html":{},"components/FlickrDetailsComponent.html":{},"components/FlickrFavouritesComponent.html":{},"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"components/FlickrTileComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutHeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/PhotoCache.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarItemComponent.html":{}}}],["wait",{"_index":579,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["want",{"_index":442,"title":{},"body":{"components/FlickrListComponent.html":{},"components/FlickrSearchComponent.html":{},"index.html":{}}}],["warn",{"_index":986,"title":{},"body":{"index.html":{}}}],["we'll",{"_index":582,"title":{},"body":{"components/FlickrSearchComponent.html":{}}}],["web",{"_index":892,"title":{},"body":{"index.html":{}}}],["welcom",{"_index":651,"title":{},"body":{"components/LayoutHeaderComponent.html":{}}}],["whether",{"_index":615,"title":{},"body":{"components/FlickrTileComponent.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["wide",{"_index":221,"title":{},"body":{"injectables/FavouritesFactory.html":{},"injectables/PhotoCache.html":{},"interfaces/PhotoHashTable.html":{},"interfaces/PhotoHashTable-1.html":{}}}],["wirefram",{"_index":930,"title":{},"body":{"index.html":{}}}],["work",{"_index":174,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["write",{"_index":932,"title":{},"body":{"index.html":{}}}],["written",{"_index":905,"title":{},"body":{"index.html":{}}}],["ye",{"_index":281,"title":{},"body":{"injectables/FlickrApiService.html":{}}}],["z0",{"_index":517,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["za",{"_index":516,"title":{},"body":{"classes/FlickrPhoto.html":{}}}],["zone.j",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Flickr Sample App'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \ttitle = 'Flickr Sample App';\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nAppModule -->\n\nContainerComponent->AppModule\n\n\n\n\n\nFlickrDetailsComponent\n\nFlickrDetailsComponent\n\nAppModule -->\n\nFlickrDetailsComponent->AppModule\n\n\n\n\n\nFlickrFavouritesComponent\n\nFlickrFavouritesComponent\n\nAppModule -->\n\nFlickrFavouritesComponent->AppModule\n\n\n\n\n\nFlickrListComponent\n\nFlickrListComponent\n\nAppModule -->\n\nFlickrListComponent->AppModule\n\n\n\n\n\nFlickrSearchComponent\n\nFlickrSearchComponent\n\nAppModule -->\n\nFlickrSearchComponent->AppModule\n\n\n\n\n\nFlickrTileComponent\n\nFlickrTileComponent\n\nAppModule -->\n\nFlickrTileComponent->AppModule\n\n\n\n\n\nLayoutHeaderComponent\n\nLayoutHeaderComponent\n\nAppModule -->\n\nLayoutHeaderComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSidebarItemComponent\n\nSidebarItemComponent\n\nAppModule -->\n\nSidebarItemComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nFavouritesFactory\n\nFavouritesFactory\n\nAppModule -->\n\nFavouritesFactory->AppModule\n\n\n\n\n\nFlickrApiService\n\nFlickrApiService\n\nAppModule -->\n\nFlickrApiService->AppModule\n\n\n\n\n\nPhotoCache\n\nPhotoCache\n\nAppModule -->\n\nPhotoCache->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                ContainerComponent\n                            \n                            \n                                FlickrDetailsComponent\n                            \n                            \n                                FlickrFavouritesComponent\n                            \n                            \n                                FlickrListComponent\n                            \n                            \n                                FlickrSearchComponent\n                            \n                            \n                                FlickrTileComponent\n                            \n                            \n                                LayoutHeaderComponent\n                            \n                            \n                                SidebarComponent\n                            \n                            \n                                SidebarItemComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     FavouritesFactory\n                            \n                            \n                                     FlickrApiService\n                            \n                            \n                                     PhotoCache\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /**\n*\n* Core \n*\n**/\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }    from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\n\n/**\n*\n* Routes\n*\n**/\nimport { AppRoutingModule }     from './app-routing.module';\n\n/**\n*\n* Components\n* \n**/\nimport { AppComponent } from './components/app.component';\nimport { LayoutHeaderComponent } from './layout/layout-header/layout-header.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { SidebarItemComponent } from './components/sidebar/sidebar-item/sidebar-item.component';\nimport { ContainerComponent } from './components/container/container.component';\nimport { FlickrListComponent } from './components/container/flickr-list/flickr-list.component';\nimport { FlickrTileComponent } from './components/container/flickr-list/flickr-tile/flickr-tile.component';\nimport { FlickrDetailsComponent } from './components/container/flickr-details/flickr-details.component';\nimport { FlickrSearchComponent } from './components/container/flickr-search/flickr-search.component';\nimport { FlickrFavouritesComponent } from './components/container/flickr-favourites/flickr-favourites.component';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { RegisterComponent } from './components/auth/register/register.component';\nimport { ForgotPasswordComponent } from './components/auth/forgot-password/forgot-password.component';\nimport { ConfirmEmailComponent } from './components/auth/confirm-email/confirm-email.component';\nimport { ProfileComponent } from './components/auth/profile/profile.component';\n\n/**\n*\n* Services\n*\n**/\nimport { FlickrApiService } from './services/flickr-api/flickr-api.service';\n\n\n/**\n*\n* Factories\n*\n**/\nimport { FavouritesFactory } from './models/factories/FavouritesFactory';\nimport { PhotoCache } from './models/factories/PhotoCache';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        SidebarComponent,\n        SidebarItemComponent,\n        ContainerComponent,\n        FlickrListComponent,\n        FlickrTileComponent,\n        FlickrDetailsComponent,\n        FlickrSearchComponent,\n        FlickrFavouritesComponent,\n        LayoutHeaderComponent,\n\n        /**\n        *\n        * TODO Authentication\n        *\n        **\n        AuthComponent,\n        LoginComponent,\n        RegisterComponent,\n        ForgotPasswordComponent,\n        ConfirmEmailComponent,\n        ProfileComponent\n        **/\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule, \n        AppRoutingModule,\n        HttpClientModule\n    ],\n    providers: [\n        FlickrApiService,\n        FavouritesFactory,\n        PhotoCache\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { FlickrListComponent } from './components/container/flickr-list/flickr-list.component';\nimport { FlickrDetailsComponent } from './components/container/flickr-details/flickr-details.component';\nimport { FlickrSearchComponent } from './components/container/flickr-search/flickr-search.component';\nimport { FlickrFavouritesComponent } from './components/container/flickr-favourites/flickr-favourites.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tredirectTo: 'photo/search', \n\t\tpathMatch: 'full'\n\t},\n\t{\n\t\tpath: 'photo',\n\t\tcomponent: FlickrListComponent\n\t},\n\t{\n\t\tpath: 'photo/search',\n\t\tcomponent: FlickrSearchComponent\n\t},\n\t{\n\t\tpath: 'photo/favourites',\n\t\tcomponent: FlickrFavouritesComponent\n\t},\n\t{\n\t\tpath: 'photo/:photoId',\n\t\tcomponent: FlickrDetailsComponent\n\t},\n];\n\n@NgModule({\n\timports: [ RouterModule.forRoot(routes) ],\n  \texports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/auth.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                auth.component.css\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/auth.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/auth/auth.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  auth works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  auth works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmEmailComponent.html":{"url":"components/ConfirmEmailComponent.html","title":"component - ConfirmEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/confirm-email/confirm-email.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-email\n            \n\n            \n                styleUrls\n                confirm-email.component.css\n            \n\n\n\n            \n                templateUrl\n                ./confirm-email.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/confirm-email/confirm-email.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/auth/confirm-email/confirm-email.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-confirm-email',\n  templateUrl: './confirm-email.component.html',\n  styleUrls: ['./confirm-email.component.css']\n})\nexport class ConfirmEmailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  confirm-email works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  confirm-email works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/container/container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-container\n            \n\n            \n                styleUrls\n                container.component.css\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/container/container.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/container.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.css']\n})\nexport class ContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\t\t\t\n\t -->\n\t\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t -->\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FavouritesFactory.html":{"url":"injectables/FavouritesFactory.html","title":"injectable - FavouritesFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FavouritesFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/factories/FavouritesFactory.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                photos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                            \n                                remove\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(flickrApi: FlickrApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/factories/FavouritesFactory.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flickrApi\n                                                  \n                                                        \n                                                                    FlickrApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/factories/FavouritesFactory.ts:68\n                            \n                        \n\n\n                \n                    \n                            Get all cached favuoritesand refresh from API  \n\n\n                            \n                                Returns :     FlickrPhoto[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(photo: FlickrPhoto)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/factories/FavouritesFactory.ts:51\n                            \n                        \n\n\n                \n                    \n                            Remove \nRemove locally and syncs with API \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photo\n                                                        \n                                                                    FlickrPhoto\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(photo: FlickrPhoto)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/factories/FavouritesFactory.ts:38\n                            \n                        \n\n\n                \n                    \n                            Save \nSaves locally and syncs with API \nActs as a global facade for sharing saved photos\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photo\n                                                        \n                                                                    FlickrPhoto\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photos\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        photos:     FlickrPhoto[]\n\n                    \n                \n                    \n                        \n                            Type :     FlickrPhoto[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/factories/FavouritesFactory.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\nimport { FlickrPhoto } from '../FlickrPhotoModel';\nimport { FlickrApiService } from '../../services/flickr-api/flickr-api.service';\n\n/**\n*\n* Favourites Factory \n* This is used as a facade to get and store all favourites app wide \n* It can also be used to sync with the API \n* and in the future @todo cache to local storage or cookies \n\n* @todo cache locally \n*\n**/\nexport interface PhotoHashTable {\n    [id: string]: FlickrPhoto;\n}\n\n@Injectable()\nexport class FavouritesFactory{\n\t\n\tphotos: FlickrPhoto[] = [];\n\n\tconstructor(private flickrApi: FlickrApiService){\n\t\t\n\t}\n\n\n\t/**\n\t*\n\t* Save \n\t* Saves locally and syncs with API \n\t* Acts as a global facade for sharing saved photos\n\t* @todo Cache locally and save to API \n\t**/\n\tsave(photo: FlickrPhoto){\n\t\tthis.photos.push(photo);\n\n\t\t// this.flickrApi.saveFavourite(photo)\n\t\t\n\t}\n\n\t/**\n\t*\n\t* Remove \n\t* Remove locally and syncs with API \n\t* @todo Remove from Cache locally and destroy on API \n\t**/\n\tremove(photo: FlickrPhoto){\n\t\t\n\t\tlet removeIndex = this.photos.map(photoItem => {\n\t\t\treturn photoItem.photo_id;\n\t\t}).indexOf(photo.photo_id);\n\t\tthis.photos = this.photos.splice(removeIndex);\n\n\t\t// this.flickrApi.destroyFavourite(photo)\n\t\t\n\t}\n\n\t/**\n\t*\n\t* Get all cached favuorites  \n\t* and refresh from API  \n\t* @todo local cache and API integration \n\t**/\n\tgetAll(): FlickrPhoto[]{\n\t\treturn this.photos;\n\t}\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FlickrApiService.html":{"url":"injectables/FlickrApiService.html","title":"injectable - FlickrApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FlickrApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/flickr-api/flickr-api.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                headers\n                            \n                            \n                                    Private\n                                queryParams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/flickr-api/flickr-api.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAll(searchTerms?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/flickr-api/flickr-api.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Get All Photosrepresents a photo's meta data used by the Flickr List and Details components \nit is created by passing a IFlickrApiItem from the flickr api\nI do this so that each response has an interface that can be tarnsformed into a model even if the mappings aren't one to one\nOptional Search terms - If tags are sent, then we will search photos by tags to filter the search critreria by to our backend, which in turn will query the flickr public api \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchTerms\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        apiUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.apiUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/flickr-api/flickr-api.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     HttpHeaders\n\n                    \n                \n                    \n                        \n                            Type :     HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/flickr-api/flickr-api.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            queryParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queryParams:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/flickr-api/flickr-api.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpRequest, HttpResponse, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\nimport { environment } from '../../../environments/environment';\nimport { IFlickrApiContract } from '../../models/contracts/IFlickrApiContract';\nimport { IFlickrApiItemContract } from '../../models/contracts/IFlickrApiItemContract';\nimport { FlickrPhoto } from '../../models/FlickrPhotoModel';\n\n\n@Injectable()\nexport class FlickrApiService {\n\n\tprivate apiUrl : string = environment.apiUrl;\n    private headers : HttpHeaders;\n    private queryParams : any;\n\n\tconstructor(private http: HttpClient) { \n\t\tif (isDevMode()) {\n\t      \tconsole.log('&#x1F44B; Development!');\n\t    } else {\n\t      \tconsole.log('&#x1F4AA; Production!');\n\t    }\n\t    console.log('&#x1F600; apiUrl: '+this.apiUrl);\n\n\n\t    this.headers = new HttpHeaders({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',                \n        });\n\t}\n\n\t/**\n\t*\n\t* Get All Photos   \n\t* represents a photo's meta data used by the Flickr List and Details components \n\t* it is created by passing a IFlickrApiItem from the flickr api\n\t* I do this so that each response has an interface that can be tarnsformed into a model even if the mappings aren't one to one\n\t*\n\t* Optional Search terms - If tags are sent, then we will search photos by tags to filter the search critreria by to our backend, which in turn will query the flickr public api \n\t*\n\t* @todo pipes make this more or less redundant, so in the future I will have response models that can self validate using json schema library\n\t*\n\t* params {} searchTerms? optional - tags to narrow the search \n\t* returns {Observable} an observable with an array of FlickrPhotos\n\t**/\n\tgetAll(searchTerms?: string): Observable{\n\n\t\tvar url = this.apiUrl+'photos';\n\n\t\tif(searchTerms !== undefined){\n\t\t\turl += '?tags='+searchTerms.split(/[ ,]+/).join(',');\n\t\t}\n\n\t\treturn this.http.get(            \n\t\t\t\turl, \n            \t{  \n                \theaders : this.headers\n            \t}\n\t\t\t).pipe(\n\t\t\t\tmap(res => {\n\t\t\t\t\t\n\t\t\t\t\tlet flickrFeed = res.flickrFeed.items.map(item => {\n\n\t\t\t\t\t\tvar contract:IFlickrApiItemContract = item;\n\t\t\t\t\t\t// @todo - check if contract is valid using json schema \n\t\t\t\t\t\tvar model:FlickrPhoto = new FlickrPhoto(contract);\n\t\t\t\t\t\treturn model;\n\n\t\t\t\t\t});\n\t\t\t\t\treturn flickrFeed;\n\t\t\t\t})\n\t\t\t)\n\t}\n\n\n\n\t\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlickrDetailsComponent.html":{"url":"components/FlickrDetailsComponent.html","title":"component - FlickrDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FlickrDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/container/flickr-details/flickr-details.component.ts\n\n\n    \n        Description\n    \n    \n        Flickr Details Compnent \nThis is used to display all the information about a single flickr photo \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-flickr-details\n            \n\n            \n                styleUrls\n                flickr-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./flickr-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                layout\n                            \n                            \n                                photoId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPhoto\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                photo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, photoCache: PhotoCache)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/container/flickr-details/flickr-details.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        photoCache\n                                                  \n                                                        \n                                                                    PhotoCache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        photo\n                    \n                    \n                        Models \n\n                            \n                            Type :    FlickrPhoto\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/container/flickr-details/flickr-details.component.ts:57\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPhoto\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPhoto()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-details/flickr-details.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Get Photo Model\nGrab from the cache first, then from the API if not found\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-details/flickr-details.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-details/flickr-details.component.ts:50\n                            \n                        \n\n                \n                    \n                        States \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layout:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\t\ttitle: 'Loading...',\n\t\timgSrc: '/assets/img/flickr.png',\n\t\tcrumbs: [\n\t\t\t{  \n\t\t\t\tpath: '/',\n\t\t\t\ttitle: 'Dashboard'\n\t\t\t},\n\t\t\t{  \n\t\t\t\tpath: '/photo',\n\t\t\t\ttitle: 'Flickr Feed'\n\t\t\t}\n\t\t]\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-details/flickr-details.component.ts:30\n                            \n                        \n\n                \n                    \n                        Layout \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photoId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        photoId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-details/flickr-details.component.ts:58\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { FlickrApiService } from '../../../services/flickr-api/flickr-api.service';\nimport { PhotoCache } from '../../../models/factories/PhotoCache';\nimport { FlickrPhoto } from '../../../models/FlickrPhotoModel';\n\n\n/**\n*\n* Flickr Details Compnent \n* This is used to display all the information about a single flickr photo \n*\n* @todo DRY! Layout could be DI \n*\n**/\n@Component({\n  selector: 'app-flickr-details',\n  templateUrl: './flickr-details.component.html',\n  styleUrls: ['./flickr-details.component.css']\n})\nexport class FlickrDetailsComponent implements OnInit {\n\n\t/**\n\t*\n\t* Layout \n\t*\n\t**/\n\tlayout = {\n\t\ttitle: 'Loading...',\n\t\timgSrc: '/assets/img/flickr.png',\n\t\tcrumbs: [\n\t\t\t{  \n\t\t\t\tpath: '/',\n\t\t\t\ttitle: 'Dashboard'\n\t\t\t},\n\t\t\t{  \n\t\t\t\tpath: '/photo',\n\t\t\t\ttitle: 'Flickr Feed'\n\t\t\t}\n\t\t]\n\t}\n\n\t/**\n\t*\n\t* States \n\t*\n\t**/\n\tisLoading = true; \n\n\t/**\n\t*\n\t* Models \n\t*\n\t**/\n\t@Input() photo: FlickrPhoto; \n\tphotoId: string; \n\n\tconstructor(private route: ActivatedRoute, private photoCache: PhotoCache) { \n\t}\n\n\tngOnInit(){\n\t\tthis.getPhoto();\n\t}\n\n\t/**\n\t*\n\t* Get Photo Model\n\t* Grab from the cache first, then from the API if not found\n\t* @todo the factory should take care of the cache/api refresh strategy , decoupling the component \n\t*\n\t*\n\t**/\n\tgetPhoto(){\n\t\tthis.photoId = this.route.snapshot.paramMap.get('photoId');\n\t\tthis.photo = this.photoCache.getById(this.photoId);\n\t\tthis.layout.title = this.photo.title;\n\t\tthis.isLoading = false;\n\n\t\t// @todo temp hack to get it to show while I fix the styles \n\t\tthis.photo.isFavourite = true; \n\t}\n\n}\n\n    \n\n    \n         \n\n\n\t\n\t \n\t\t\n\t\t\tloading ... \n\t\t\n\t\n\t\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' \t\t \t\t\t\t\tloading ... \t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlickrDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlickrFavouritesComponent.html":{"url":"components/FlickrFavouritesComponent.html","title":"component - FlickrFavouritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FlickrFavouritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/container/flickr-favourites/flickr-favourites.component.ts\n\n\n    \n        Description\n    \n    \n        Favourites component \nSave local favourites for quick viewing and inspiration!\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-flickr-favourites\n            \n\n            \n                styleUrls\n                flickr-favourites.component.css\n            \n\n\n\n            \n                templateUrl\n                ./flickr-favourites.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                layout\n                            \n                            \n                                photos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, flickrApi: FlickrApiService, favouritesFactory: FavouritesFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/container/flickr-favourites/flickr-favourites.component.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        flickrApi\n                                                  \n                                                        \n                                                                    FlickrApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        favouritesFactory\n                                                  \n                                                        \n                                                                    FavouritesFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-favourites/flickr-favourites.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-favourites/flickr-favourites.component.ts:50\n                            \n                        \n\n                \n                    \n                        States \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layout:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\t\ttitle: 'Favourites',\n\t\timgSrc: '/assets/img/flickr.png',\n\t\tcrumbs: [\n\t\t\t{  \n\t\t\t\tpath: '/',\n\t\t\t\ttitle: 'Dashboard'\n\t\t\t},\n\t\t\t{  \n\t\t\t\tpath: '/photo',\n\t\t\t\ttitle: 'Flickr Feed'\n\t\t\t}\n\t\t]\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-favourites/flickr-favourites.component.ts:30\n                            \n                        \n\n                \n                    \n                        Layout \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photos\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        photos:     FlickrPhoto[]\n\n                    \n                \n                    \n                        \n                            Type :     FlickrPhoto[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-favourites/flickr-favourites.component.ts:57\n                            \n                        \n\n                \n                    \n                        Models \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { FlickrApiService } from '../../../services/flickr-api/flickr-api.service';\n\nimport { FlickrPhoto } from '../../../models/FlickrPhotoModel';\nimport { PhotoHashTable, FavouritesFactory } from '../../../models/factories/FavouritesFactory';\n\n/**\n* \n* Favourites component \n* Save local favourites for quick viewing and inspiration!\n* @todo splice removed favourites when 'unsaved' \n* @bug tile not removed when 'unsaved'\n**/\n@Component({\n  selector: 'app-flickr-favourites',\n  templateUrl: './flickr-favourites.component.html',\n  styleUrls: ['./flickr-favourites.component.css']\n})\nexport class FlickrFavouritesComponent implements OnInit {\n\n\t/**\n\t*\n\t* Layout \n\t*\n\t**/\n\tlayout = {\n\t\ttitle: 'Favourites',\n\t\timgSrc: '/assets/img/flickr.png',\n\t\tcrumbs: [\n\t\t\t{  \n\t\t\t\tpath: '/',\n\t\t\t\ttitle: 'Dashboard'\n\t\t\t},\n\t\t\t{  \n\t\t\t\tpath: '/photo',\n\t\t\t\ttitle: 'Flickr Feed'\n\t\t\t}\n\t\t]\n\t}\n\n\t/**\n\t*\n\t* States \n\t*\n\t**/\n\tisLoading = false; \n\n\t/**\n\t*\n\t* Models \n\t*\n\t**/\n\tphotos: FlickrPhoto[] = [];\n\n\tconstructor(private route: ActivatedRoute, private flickrApi: FlickrApiService, private favouritesFactory: FavouritesFactory) { \n\t}\n\n\tngOnInit() {\n\n\t\tthis.photos = this.favouritesFactory.getAll();\n\t\t\n\t\t/*for (var id in photoTable) {\n\t\t\tthis.photos.push(photoTable[id]);\n\t\t}*/\n\n\t}\n\n\n}\n\n    \n\n    \n         \n\n\n\t\n\t\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' \t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlickrFavouritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlickrListComponent.html":{"url":"components/FlickrListComponent.html","title":"component - FlickrListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FlickrListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/container/flickr-list/flickr-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                flickr-list\n            \n\n            \n                styleUrls\n                flickr-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./flickr-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                layout\n                            \n                            \n                                photos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAllError\n                            \n                            \n                                getAllPhotos\n                            \n                            \n                                getAllSuccess\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, flickrApi: FlickrApiService, photoCache: PhotoCache)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/container/flickr-list/flickr-list.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        flickrApi\n                                                  \n                                                        \n                                                                    FlickrApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        photoCache\n                                                  \n                                                        \n                                                                    PhotoCache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAllError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAllError(error: HttpErrorResponse | any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-list.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Get All Photos Failed\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllPhotos\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllPhotos()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-list.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Get All Photos\nGrab all the photos from our backend and display them as tiles  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllSuccess\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllSuccess(photos: FlickrPhoto[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-list.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Get All Photos Success\nOnce we have all the photos, display them as tiles and hide the loading message \nCache the photos locally for quick viewing from the details view \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photos\n                                                        \n                                                                    FlickrPhoto[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-list.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-list.component.ts:39\n                            \n                        \n\n                \n                    \n                        States \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layout:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\t\ttitle: 'Flickr Feed',\n\t\timgSrc: '/assets/img/flickr.png',\n\t\tcrumbs: [\n\t\t\t{  \n\t\t\t\tpath: '/',\n\t\t\t\ttitle: 'Dashboard'\n\t\t\t}\n\t\t]\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-list.component.ts:23\n                            \n                        \n\n                \n                    \n                        Layout \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photos\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        photos:     FlickrPhoto[]\n\n                    \n                \n                    \n                        \n                            Type :     FlickrPhoto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-list.component.ts:46\n                            \n                        \n\n                \n                    \n                        Models \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { FlickrPhoto } from '../../../models/FlickrPhotoModel';\nimport { FlickrApiService } from '../../../services/flickr-api/flickr-api.service';\nimport { PhotoCache } from '../../../models/factories/PhotoCache';\n\n\n@Component({\n\tselector: 'flickr-list',\n\ttemplateUrl: './flickr-list.component.html',\n\tstyleUrls: ['./flickr-list.component.css']\n})\nexport class FlickrListComponent implements OnInit {\n\n\t/**\n\t*\n\t* Layout \n\t*\n\t**/\n\tlayout = {\n\t\ttitle: 'Flickr Feed',\n\t\timgSrc: '/assets/img/flickr.png',\n\t\tcrumbs: [\n\t\t\t{  \n\t\t\t\tpath: '/',\n\t\t\t\ttitle: 'Dashboard'\n\t\t\t}\n\t\t]\n\t}\n\n\t/**\n\t*\n\t* States \n\t*\n\t**/\n\tisLoading = true; \n\n\t/**\n\t*\n\t* Models \n\t*\n\t**/\n\tphotos: FlickrPhoto[];\n\n\tconstructor(private route: ActivatedRoute, private flickrApi: FlickrApiService, private photoCache: PhotoCache) { \n\t}\n\n\tngOnInit() {\n\n\t\tthis.getAllPhotos();\n\n\t}\n\n\t/**\n\t*\n\t* Get All Photos\n\t* Grab all the photos from our backend and display them as tiles  \n\t*\n\t**/\n\tgetAllPhotos(){\n\n\t\tthis.isLoading = true; \n\n\t\tlet getAllPhotos = this.flickrApi.getAll();\n\n\t\tgetAllPhotos.subscribe(\n\t\t\tphotos => this.getAllSuccess(photos),\n\t\t\terr  => this.getAllError(err)\n\t\t)\n\t}\n\n\t/**\n\t*\n\t* Get All Photos Success\n\t* Once we have all the photos, display them as tiles and hide the loading message \n\t* Cache the photos locally for quick viewing from the details view \n\t**/\n\tgetAllSuccess(photos: FlickrPhoto[]){\n\n\t\tthis.isLoading = false;\n\t\tthis.photos = photos;\n\t\t\n\t\t// -- cache the photos for details view \n\t\tthis.photoCache.saveAll(this.photos);\n\t}\n\n\t/**\n\t*\n\t* Get All Photos Failed\n\t* @todo If loading the photos failed, we want to alert the user and give them an option so self solve or escalate by contacting us \n\t*\n\t**/\n\tprivate getAllError(error: HttpErrorResponse | any){\n\n\t\tthis.isLoading = false;\n\n\t\tlet errMsg: string;\n\t\tif (error instanceof HttpErrorResponse) {                \n\t\t\terrMsg = `${error.status} - ${error.statusText || ''} - ${error.message}`;\n\t\t} else {\n\t\t\terrMsg = error.message ? error.message : error.toString();\n\t\t}\n\t\tconsole.log(errMsg);\n\n\t}\n}\n\n    \n\n    \n         \n\n\n\t\n\t \n\t\t\n\t\t\tloading ... \n\t\t\n\t\n\t\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' \t\t \t\t\t\t\tloading ... \t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlickrListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlickrPhoto.html":{"url":"classes/FlickrPhoto.html","title":"class - FlickrPhoto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlickrPhoto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FlickrPhotoModel.ts\n        \n\n            \n                Description\n            \n            \n                FlickrPhotoModel \nrepresents a photo's meta data used by the Flickr List and Details components \nit is created by passing a IFlickrApiItem from the flickr api\nI do this so that each response has an interface that can be tarnsformed into a model even if the mappings aren't one to one\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                author_id\n                            \n                            \n                                date_taken\n                            \n                            \n                                description\n                            \n                            \n                                isFavourite\n                            \n                            \n                                link\n                            \n                            \n                                media\n                            \n                            \n                                photo_id\n                            \n                            \n                                published\n                            \n                            \n                                tags\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authourEmail\n                            \n                            \n                                authourName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(contract: IFlickrApiItemContract)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/FlickrPhotoModel.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contract\n                                                  \n                                                        \n                                                                    IFlickrApiItemContract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        author:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        author_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date_taken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        date_taken:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFavourite\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isFavourite:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        link:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            media\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        media:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photo_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        photo_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            published\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        published:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tags:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authourEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthourEmail()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authourName\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthourName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/FlickrPhotoModel.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {IFlickrApiItemContract} from './contracts/IFlickrApiItemContract'; \n\n/**\n*\n* FlickrPhotoModel \n* represents a photo's meta data used by the Flickr List and Details components \n* it is created by passing a IFlickrApiItem from the flickr api\n* I do this so that each response has an interface that can be tarnsformed into a model even if the mappings aren't one to one\n* @todo pipes make this more or less redundant, so in the future I will have response models that can self validate using json schema library\n*\n**/\nexport class FlickrPhoto{\n\n\ttitle: string;\n    link: string;\n    media:  string;\n    date_taken: string;\n    description: string;\n    published: string;\n    author: string;\n    author_id: string;\n    tags: string;\n    photo_id: string;\n    isFavourite:boolean;\n\n    constructor(contract: IFlickrApiItemContract) {\n\n        this.title = contract.title;\n        this.link = contract.link;\n        this.media = contract.media.m;\n        this.date_taken = contract.date_taken;\n        this.description = contract.description;\n        this.published = contract.published;\n        this.author = contract.author;\n        this.author_id = contract.author_id;\n        this.tags = contract.tags;\n        this.photo_id = contract.photo_id;\n\n        /**\n        *  set favourite false by default \n        * @todo update the api to send back favourite or not by looking up the image in the DynamoDb table \n        **/\n        this.isFavourite = false; \n    }\n\n\n    authourEmail():string{\n\n        var emails = this.author.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi);\n        return emails ? emails[0] : \"\";\n    }\n\n    authourName():string{\n\n        const names = this.author.match(/\"(.*?)\"/);\n        return names ? names[1] : \"\";\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlickrSearchComponent.html":{"url":"components/FlickrSearchComponent.html","title":"component - FlickrSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FlickrSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/container/flickr-search/flickr-search.component.ts\n\n\n    \n        Description\n    \n    \n        Flickr Search Component\nThis component allows the user to search for tags seperated by spaces \nThis is repeating most of what the Flickr List page is doing thus it should be refactored so we dont repeat ourselves \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-flickr-search\n            \n\n            \n                styleUrls\n                flickr-search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./flickr-search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delay\n                            \n                            \n                                isLoading\n                            \n                            \n                                layout\n                            \n                            \n                                photos\n                            \n                            \n                                    Private\n                                searchTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                search\n                            \n                            \n                                searchPhotosByTags\n                            \n                            \n                                    Private\n                                searchPhotosError\n                            \n                            \n                                searchPhotosSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, flickrApi: FlickrApiService, photoCache: PhotoCache)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/container/flickr-search/flickr-search.component.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        flickrApi\n                                                  \n                                                        \n                                                                    FlickrApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        photoCache\n                                                  \n                                                        \n                                                                    PhotoCache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearch(tags: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tags\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchPhotosByTags\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearchPhotosByTags(tags: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:150\n                            \n                        \n\n\n                \n                    \n                            Search Photos by Tags\nGrab all the photos from our backend that match the comma seperated list from the search box \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tags\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchPhotosError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        searchPhotosError(error: HttpErrorResponse | any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:185\n                            \n                        \n\n\n                \n                    \n                            Search Photos Failed\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchPhotosSuccess\n                            \n                            \n                        \n                    \n                \n                \n                    \nsearchPhotosSuccess(photos: FlickrPhoto[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:169\n                            \n                        \n\n\n                \n                    \n                            Search Photos Success\nOnce we have all the photos, display them as tiles and hide the loading message \nCache the photos locally for quick viewing from the details view \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photos\n                                                        \n                                                                    FlickrPhoto[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delay:     \n\n                    \n                \n                    \n                        \n                            Default value : (() => {\n\t\tvar timer = 0;\n\t\treturn (callback, ms) => {\n\t\t\tclearTimeout (timer);\n\t\t\ttimer = setTimeout(callback, ms);\n\t\t};\n\t})()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:54\n                            \n                        \n\n                \n                    \n                        States \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layout:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\t\ttitle: 'Search by Tags',\n\t\timgSrc: '/assets/img/flickr.png',\n\t\tcrumbs: [\n\t\t\t{  \n\t\t\t\tpath: '/',\n\t\t\t\ttitle: 'Dashboard'\n\t\t\t},\n\t\t\t{  \n\t\t\t\tpath: '/photo',\n\t\t\t\ttitle: 'Flickr Feed'\n\t\t\t}\n\t\t]\n\t}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:34\n                            \n                        \n\n                \n                    \n                        Layout \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photos\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        photos:     FlickrPhoto[]\n\n                    \n                \n                    \n                        \n                            Type :     FlickrPhoto[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:62\n                            \n                        \n\n                \n                    \n                        Models \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchTimeout:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.searchTimeout\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/container/flickr-search/flickr-search.component.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\n\nimport {environment} from '../../../../environments/environment';\n\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { FlickrApiService } from '../../../services/flickr-api/flickr-api.service';\nimport { PhotoCache } from '../../../models/factories/PhotoCache';\nimport { FlickrPhoto } from '../../../models/FlickrPhotoModel';\n\n/**\n*\n* Flickr Search Component\n* This component allows the user to search for tags seperated by spaces \n* This is repeating most of what the Flickr List page is doing thus it should be refactored so we dont repeat ourselves \n* @todo DRY! Refactor into the List page as a small search component, not an entire repeated component  \n*\n**/\n@Component({\n\tselector: 'app-flickr-search',\n\ttemplateUrl: './flickr-search.component.html',\n\tstyleUrls: ['./flickr-search.component.css']\n})\nexport class FlickrSearchComponent implements OnInit {\n\n\t/**\n\t*\n\t* Layout \n\t*\n\t**/\n\tlayout = {\n\t\ttitle: 'Search by Tags',\n\t\timgSrc: '/assets/img/flickr.png',\n\t\tcrumbs: [\n\t\t\t{  \n\t\t\t\tpath: '/',\n\t\t\t\ttitle: 'Dashboard'\n\t\t\t},\n\t\t\t{  \n\t\t\t\tpath: '/photo',\n\t\t\t\ttitle: 'Flickr Feed'\n\t\t\t}\n\t\t]\n\t}\n\n\t/**\n\t*\n\t* States \n\t*\n\t**/\n\tisLoading = false; \n\n\n\t/**\n\t*\n\t* Models \n\t*\n\t**/\n\tphotos: FlickrPhoto[];\n\n\t/**\n\t* @todo to be used for observable streams \n\t*\n\tphotos$: Observable;\n\t*/\n\n\t/**\n\t*\n\t* Search Terms \n\t* These are used to push search terms into an observable stream which will be looked up via the api after a predefined timeout   \n\t*\n\t**/\n\tprivate searchTimeout = environment.searchTimeout;\n\n\t/**\n\t* @todo to be used for observable streams \n\t*\n\tprivate searchTags = new Subject();\n\t*/\n\n\n\tconstructor(private route: ActivatedRoute, private flickrApi: FlickrApiService, private photoCache: PhotoCache) { \n\t}\n\n\n\t/**\n\t*\n\t* @todo Observable Stream \n\t* On init we setup the search terms as an observable stream \n\t* after waiting for a configurable interval, we'll ask the api for the search terms \n\t* we'll also filter any duplicate search terms  \n\t* \n\t**/\n\tngOnInit() {\n\n\t\t/**\n\t\t* @todo to be used for observable streams \n\t\t*\n\t\tthis.photos$ = this.searchTags.pipe(\n\n\t\t\t// wait a predefined period before searching the api \n\t\t\tdebounceTime(this.searchTimeout),\n\n\t\t\t// ignore new term if same as previous term\n\t\t\tdistinctUntilChanged(),\n\n\t\t\t// switch to new search observable each time the tags change\n\t\t\tswitchMap((term: string) => {\n\t\t\t\tthis.flickrApi.getAll(term)\n\t\t\t}),\n\n\t\t);\n\t\t*\n\t\t**/\n\t}\n\n\tdelay = (() => {\n\t\tvar timer = 0;\n\t\treturn (callback, ms) => {\n\t\t\tclearTimeout (timer);\n\t\t\ttimer = setTimeout(callback, ms);\n\t\t};\n\t})();\n\n\n\tsearch(tags: string): void {\n\n\t\t/**\n\t\t* @todo to be used for observable streams \n\t\t*\n\t\tthis.searchTags.next(tags);\n\t\t**/\n\n\t\tthis.delay(() => {\n\t\t   \n\t\t\tthis.searchPhotosByTags(tags);\n\n\t\t}, this.searchTimeout );\n\t}\n\n\t/**\n\t*\n\t* Search Photos by Tags\n\t* Grab all the photos from our backend that match the comma seperated list from the search box \n\t*\n\t**/\n\tsearchPhotosByTags(tags){\n\n\t\tthis.isLoading = true; \n\n\t\tlet searchPhotos = this.flickrApi.getAll(tags);\n\n\t\tsearchPhotos.subscribe(\n\t\t\tphotos => this.searchPhotosSuccess(photos),\n\t\t\terr  => this.searchPhotosError(err)\n\t\t)\n\t}\n\n\t/**\n\t*\n\t* Search Photos Success\n\t* Once we have all the photos, display them as tiles and hide the loading message \n\t* Cache the photos locally for quick viewing from the details view \n\t* \n\t**/\n\tsearchPhotosSuccess(photos: FlickrPhoto[]){\n\n\t\tthis.isLoading = false;\n\t\tthis.photos = photos;\n\t\t\n\t\t// -- cache the photos for details view \n\t\tthis.photoCache.saveAll(this.photos);\n\n\t}\n\n\t/**\n\t*\n\t* Search Photos Failed\n\t* @todo If loading the photos failed, we want to alert the user and give them an option so self solve or escalate by contacting us \n\t*\n\t**/\n\tprivate searchPhotosError(error: HttpErrorResponse | any){\n\n\t\tthis.isLoading = false;\n\n\t\tlet errMsg: string;\n\t\tif (error instanceof HttpErrorResponse) {                \n\t\t\terrMsg = `${error.status} - ${error.statusText || ''} - ${error.message}`;\n\t\t} else {\n\t\t\terrMsg = error.message ? error.message : error.toString();\n\t\t}\n\t\tconsole.log(errMsg);\n\n\t}\n\n}\n\n    \n\n    \n         \n\n\n\t\n\n\n\t\n\t\t\n\t\t\n\t\n\t\n\t \n\t\t\n\t\t\tloading ... \n\t\t\n\t\n\t\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' \t\t\t\t\t\t\t\t\t \t\t\t\t\tloading ... \t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlickrSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlickrTileComponent.html":{"url":"components/FlickrTileComponent.html","title":"component - FlickrTileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FlickrTileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/container/flickr-list/flickr-tile/flickr-tile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                flickr-tile\n            \n\n            \n                styleUrls\n                flickr-tile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./flickr-tile.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleFavourite\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                photo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(favouritesFactory: FavouritesFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/container/flickr-list/flickr-tile/flickr-tile.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        favouritesFactory\n                                                  \n                                                        \n                                                                    FavouritesFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        photo\n                    \n                    \n                            \n                            Type :    FlickrPhoto\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-tile/flickr-tile.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-tile/flickr-tile.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleFavourite\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleFavourite()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/container/flickr-list/flickr-tile/flickr-tile.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Toggle Favourite\nThis toggles whether the photo should be saved or not\nWe send this back to the API to save this agaisnt our account for the future\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\nimport { FlickrPhoto } from '../../../../models/FlickrPhotoModel';\nimport { FavouritesFactory } from '../../../../models/factories/FavouritesFactory';\n\n@Component({\n  selector: 'flickr-tile',\n  templateUrl: './flickr-tile.component.html',\n  styleUrls: ['./flickr-tile.component.css']\n})\nexport class FlickrTileComponent implements OnInit {\n\n\t@Input() photo: FlickrPhoto;\n\n\tconstructor(private favouritesFactory: FavouritesFactory) { }\n\n\tngOnInit() {\n\t}\n\n\t/**\n\t*\n\t* Toggle Favourite\n\t* This toggles whether the photo should be saved or not\n\t* We send this back to the API to save this agaisnt our account for the future\n\t* @todo this should be saved to the model by the server \n\t*\n\t**/\n\ttoggleFavourite(){\n\n\t\tthis.photo.isFavourite = !this.photo.isFavourite;\n\n\t\tif(this.photo.isFavourite){\n\t\t\tthis.favouritesFactory.save(this.photo);\n\t\t\tconsole.log('this.favouritesFactory.photos', this.favouritesFactory.photos);\n\t\t}\n\t\telse{\n\t\t\tthis.favouritesFactory.remove(this.photo);\t\n\t\t\tconsole.log('this.favouritesFactory.photos', this.favouritesFactory.photos);\n\t\t}\n\t}\n\n}\n\n    \n\n    \n        \n\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\n\t\t\n\n\t\t\n\t\t\t\n\t\t\t\t{{photo.title}}\n\t\t\t\n\t\t\t\n\t\t\t\t by {{photo.authourName()}} \n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\n\t\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{photo.title}}\t\t\t\t\t\t\t\t\t\t by {{photo.authourName()}} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlickrTileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/forgot-password/forgot-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                styleUrls\n                forgot-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  forgot-password works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  forgot-password works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlickrApiContract.html":{"url":"interfaces/IFlickrApiContract.html","title":"interface - IFlickrApiContract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFlickrApiContract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contracts/IFlickrApiContract.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        flickrFeed\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        flickrFeed\n                                    \n                                \n                                \n                                    \n                                        flickrFeed:     IFlickrFeedContract\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFlickrFeedContract\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {IFlickrApiItemContract} from './IFlickrApiItemContract';\n\n/**\n*\n* This interface is used to strongly type and validate the Flickr API  feed. \n*\n**/\nexport interface IFlickrFeedContract{\n    title: string,\n    link: string;\n    description: string;\n    modified: string;\n    generator: string;\n    items: IFlickrApiItemContract[];\n}\nexport interface IFlickrApiContract{\n\tstatusCode: string;\n    flickrFeed: IFlickrFeedContract;\n} \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlickrApiItemContract.html":{"url":"interfaces/IFlickrApiItemContract.html","title":"interface - IFlickrApiItemContract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFlickrApiItemContract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contracts/IFlickrApiItemContract.ts\n        \n\n            \n                Description\n            \n            \n                This interface is used to strongly type and validate the Flickr API items feed. \nFurthermore it can be used as a template for initialising the FlickrPhotoModel constructor\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        author\n                                \n                                \n                                        author_id\n                                \n                                \n                                        date_taken\n                                \n                                \n                                        description\n                                \n                                \n                                        link\n                                \n                                \n                                        media\n                                \n                                \n                                        photo_id\n                                \n                                \n                                        published\n                                \n                                \n                                        tags\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                    \n                                \n                                \n                                    \n                                        author:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        author_id\n                                    \n                                \n                                \n                                    \n                                        author_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date_taken\n                                    \n                                \n                                \n                                    \n                                        date_taken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                    \n                                \n                                \n                                    \n                                        media:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photo_id\n                                    \n                                \n                                \n                                    \n                                        photo_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        published\n                                    \n                                \n                                \n                                    \n                                        published:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                    \n                                \n                                \n                                    \n                                        tags:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFlickrApiItemContract{\n\ttitle: string;\n    link: string;\n    media:  {\n    \tm: string\n    };\n    date_taken: string;\n    description: string;\n    published: string;\n    author: string;\n    author_id: string;\n    tags: string;\n    photo_id: string;\n} \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlickrFeedContract.html":{"url":"interfaces/IFlickrFeedContract.html","title":"interface - IFlickrFeedContract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFlickrFeedContract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contracts/IFlickrApiContract.ts\n        \n\n            \n                Description\n            \n            \n                This interface is used to strongly type and validate the Flickr API  feed. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        generator\n                                \n                                \n                                        items\n                                \n                                \n                                        link\n                                \n                                \n                                        modified\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        generator\n                                    \n                                \n                                \n                                    \n                                        generator:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     IFlickrApiItemContract[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFlickrApiItemContract[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modified\n                                    \n                                \n                                \n                                    \n                                        modified:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {IFlickrApiItemContract} from './IFlickrApiItemContract';\n\n/**\n*\n* This interface is used to strongly type and validate the Flickr API  feed. \n*\n**/\nexport interface IFlickrFeedContract{\n    title: string,\n    link: string;\n    description: string;\n    modified: string;\n    generator: string;\n    items: IFlickrApiItemContract[];\n}\nexport interface IFlickrApiContract{\n\tstatusCode: string;\n    flickrFeed: IFlickrFeedContract;\n} \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutHeaderComponent.html":{"url":"components/LayoutHeaderComponent.html","title":"component - LayoutHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout-header/layout-header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                layout-header\n            \n\n            \n                styleUrls\n                layout-header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./layout-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                crumbs\n                            \n                            \n                                imgSrc\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/layout-header/layout-header.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        crumbs\n                    \n                    \n                        \n                            Default value : [\n\t\t{path:'/', title: 'Dashboard'}\n\t]\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/layout/layout-header/layout-header.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imgSrc\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : '/assets/img/flickr.png'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/layout/layout-header/layout-header.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : 'Welcome'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/layout/layout-header/layout-header.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout-header/layout-header.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n\tselector: 'layout-header',\n\ttemplateUrl: './layout-header.component.html',\n\tstyleUrls: ['./layout-header.component.css']\n})\nexport class LayoutHeaderComponent implements OnInit {\n\n\t@Input() title: string = 'Welcome';\n\t@Input() imgSrc: string = '/assets/img/flickr.png'; \n\t@Input() crumbs = [\n\t\t{path:'/', title: 'Dashboard'}\n\t];\n\n  \tconstructor() { }\n\n  \tngOnInit() {\n  \t}\n\n}\n\n    \n\n    \n        \n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\t{{crumb.title}}\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\t{{title}}\n\t\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\t\t{{crumb.title}}\t\t\t\t\t\t\t\t\t\t\t\t{{title}}\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/login/login.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/auth/login/login.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  login works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  login works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PhotoCache.html":{"url":"injectables/PhotoCache.html","title":"injectable - PhotoCache","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PhotoCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/factories/PhotoCache.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                photos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                remove\n                            \n                            \n                                save\n                            \n                            \n                                saveAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(flickrApi: FlickrApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/factories/PhotoCache.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flickrApi\n                                                  \n                                                        \n                                                                    FlickrApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/factories/PhotoCache.ts:84\n                            \n                        \n\n\n                \n                    \n                            Get all cached favuoritesand refresh from API  \n\n\n                            \n                                Returns :     FlickrPhoto[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetById(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/factories/PhotoCache.ts:95\n                            \n                        \n\n\n                \n                    \n                            Get by id \nand refresh from API  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FlickrPhoto\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(photo: FlickrPhoto)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/factories/PhotoCache.ts:66\n                            \n                        \n\n\n                \n                    \n                            Remove \nRemove locally and syncs with API \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photo\n                                                        \n                                                                    FlickrPhoto\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(photo: FlickrPhoto)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/factories/PhotoCache.ts:52\n                            \n                        \n\n\n                \n                    \n                            Save \nSaves locally and syncs with API \nActs as a global facade for sharing saved photos\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photo\n                                                        \n                                                                    FlickrPhoto\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveAll(photos: FlickrPhoto[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/factories/PhotoCache.ts:39\n                            \n                        \n\n\n                \n                    \n                            Save All\nHelper method to bulk save photos \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photos\n                                                        \n                                                                    FlickrPhoto[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            photos\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        photos:     FlickrPhoto[]\n\n                    \n                \n                    \n                        \n                            Type :     FlickrPhoto[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/factories/PhotoCache.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\nimport { FlickrPhoto } from '../FlickrPhotoModel';\nimport { FlickrApiService } from '../../services/flickr-api/flickr-api.service';\n\n/**\n*\n* Favourites Factory \n* This is used as a facade to get and store all favourites app wide \n* It can also be used to sync with the API \n* and in the future @todo cache to local storage or cookies \n\n* @todo cache locally \n* @todo DRY! this is a copy paste of Favourites. This should be one factory. \n* @todo Architecture: Components should go via one Models facade/cache which will decide whether to refresh cache from api or pull from local \n*\n**/\nexport interface PhotoHashTable {\n    [id: string]: FlickrPhoto;\n}\n\n@Injectable()\nexport class PhotoCache{\n\t\n\t// private photos?: PhotoHashTable = [];\n\tprivate photos: FlickrPhoto[] = [];\n\n\tconstructor(private flickrApi: FlickrApiService){\n\t\t\n\t}\n\n\n\t/**\n\t*\n\t* Save All\n\t* Helper method to bulk save photos \n\t**/\n\tsaveAll(photos: FlickrPhoto[]){\n\t\tphotos.forEach(photo => {\n\t\t\tthis.save(photo);\n\t\t})\n\t}\n\n\t/**\n\t*\n\t* Save \n\t* Saves locally and syncs with API \n\t* Acts as a global facade for sharing saved photos\n\t* @todo Cache locally and save to API \n\t**/\n\tsave(photo: FlickrPhoto){\n\t\t// this.photos[photo.photo_id] = photo;\n\t\tthis.photos.push(photo);\n\n\t\t// this.flickrApi.saveFavourite(photo)\n\t\t\n\t}\n\n\t/**\n\t*\n\t* Remove \n\t* Remove locally and syncs with API \n\t* @todo Remove from Cache locally and destroy on API \n\t**/\n\tremove(photo: FlickrPhoto){\n\t\t\n\t\tlet removeIndex = this.photos.map(photoItem => {\n\t\t\treturn photoItem.photo_id;\n\t\t}).indexOf(photo.photo_id);\n\t\tthis.photos = this.photos.splice(removeIndex);\n\n\t\t// this.flickrApi.destroyFavourite(photo)\n\t\t\n\t}\n\n\n\t/**\n\t*\n\t* Get all cached favuorites  \n\t* and refresh from API  \n\t* @todo local cache and API integration \n\t**/\n\tgetAll(): FlickrPhoto[]{\n\t\treturn this.photos;\n\t}\n\n\t/**\n\t*\n\t* Get by id \n\t* and refresh from API  \n\t* @todo local cache and API integration \n\t* return FlickrPhoto for the given ID\n\t**/\n\tgetById(id): FlickrPhoto{\n\t\treturn this.photos.find(photo =>  photo.photo_id == id);\n\t}\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PhotoHashTable.html":{"url":"interfaces/PhotoHashTable.html","title":"interface - PhotoHashTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PhotoHashTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/factories/FavouritesFactory.ts\n        \n\n            \n                Description\n            \n            \n                Favourites Factory \nThis is used as a facade to get and store all favourites app wide \nIt can also be used to sync with the API \nand in the future @todo cache to local storage or cookies \n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [id: string]:    FlickrPhoto\n\n                    \n                \n                        \n                            \n                                Defined in src/app/models/factories/FavouritesFactory.ts:17\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\nimport { FlickrPhoto } from '../FlickrPhotoModel';\nimport { FlickrApiService } from '../../services/flickr-api/flickr-api.service';\n\n/**\n*\n* Favourites Factory \n* This is used as a facade to get and store all favourites app wide \n* It can also be used to sync with the API \n* and in the future @todo cache to local storage or cookies \n\n* @todo cache locally \n*\n**/\nexport interface PhotoHashTable {\n    [id: string]: FlickrPhoto;\n}\n\n@Injectable()\nexport class FavouritesFactory{\n\t\n\tphotos: FlickrPhoto[] = [];\n\n\tconstructor(private flickrApi: FlickrApiService){\n\t\t\n\t}\n\n\n\t/**\n\t*\n\t* Save \n\t* Saves locally and syncs with API \n\t* Acts as a global facade for sharing saved photos\n\t* @todo Cache locally and save to API \n\t**/\n\tsave(photo: FlickrPhoto){\n\t\tthis.photos.push(photo);\n\n\t\t// this.flickrApi.saveFavourite(photo)\n\t\t\n\t}\n\n\t/**\n\t*\n\t* Remove \n\t* Remove locally and syncs with API \n\t* @todo Remove from Cache locally and destroy on API \n\t**/\n\tremove(photo: FlickrPhoto){\n\t\t\n\t\tlet removeIndex = this.photos.map(photoItem => {\n\t\t\treturn photoItem.photo_id;\n\t\t}).indexOf(photo.photo_id);\n\t\tthis.photos = this.photos.splice(removeIndex);\n\n\t\t// this.flickrApi.destroyFavourite(photo)\n\t\t\n\t}\n\n\t/**\n\t*\n\t* Get all cached favuorites  \n\t* and refresh from API  \n\t* @todo local cache and API integration \n\t**/\n\tgetAll(): FlickrPhoto[]{\n\t\treturn this.photos;\n\t}\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PhotoHashTable-1.html":{"url":"interfaces/PhotoHashTable-1.html","title":"interface - PhotoHashTable-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PhotoHashTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/factories/PhotoCache.ts\n        \n\n            \n                Description\n            \n            \n                Favourites Factory \nThis is used as a facade to get and store all favourites app wide \nIt can also be used to sync with the API \nand in the future @todo cache to local storage or cookies \n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [id: string]:    FlickrPhoto\n\n                    \n                \n                        \n                            \n                                Defined in src/app/models/factories/PhotoCache.ts:19\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\nimport { FlickrPhoto } from '../FlickrPhotoModel';\nimport { FlickrApiService } from '../../services/flickr-api/flickr-api.service';\n\n/**\n*\n* Favourites Factory \n* This is used as a facade to get and store all favourites app wide \n* It can also be used to sync with the API \n* and in the future @todo cache to local storage or cookies \n\n* @todo cache locally \n* @todo DRY! this is a copy paste of Favourites. This should be one factory. \n* @todo Architecture: Components should go via one Models facade/cache which will decide whether to refresh cache from api or pull from local \n*\n**/\nexport interface PhotoHashTable {\n    [id: string]: FlickrPhoto;\n}\n\n@Injectable()\nexport class PhotoCache{\n\t\n\t// private photos?: PhotoHashTable = [];\n\tprivate photos: FlickrPhoto[] = [];\n\n\tconstructor(private flickrApi: FlickrApiService){\n\t\t\n\t}\n\n\n\t/**\n\t*\n\t* Save All\n\t* Helper method to bulk save photos \n\t**/\n\tsaveAll(photos: FlickrPhoto[]){\n\t\tphotos.forEach(photo => {\n\t\t\tthis.save(photo);\n\t\t})\n\t}\n\n\t/**\n\t*\n\t* Save \n\t* Saves locally and syncs with API \n\t* Acts as a global facade for sharing saved photos\n\t* @todo Cache locally and save to API \n\t**/\n\tsave(photo: FlickrPhoto){\n\t\t// this.photos[photo.photo_id] = photo;\n\t\tthis.photos.push(photo);\n\n\t\t// this.flickrApi.saveFavourite(photo)\n\t\t\n\t}\n\n\t/**\n\t*\n\t* Remove \n\t* Remove locally and syncs with API \n\t* @todo Remove from Cache locally and destroy on API \n\t**/\n\tremove(photo: FlickrPhoto){\n\t\t\n\t\tlet removeIndex = this.photos.map(photoItem => {\n\t\t\treturn photoItem.photo_id;\n\t\t}).indexOf(photo.photo_id);\n\t\tthis.photos = this.photos.splice(removeIndex);\n\n\t\t// this.flickrApi.destroyFavourite(photo)\n\t\t\n\t}\n\n\n\t/**\n\t*\n\t* Get all cached favuorites  \n\t* and refresh from API  \n\t* @todo local cache and API integration \n\t**/\n\tgetAll(): FlickrPhoto[]{\n\t\treturn this.photos;\n\t}\n\n\t/**\n\t*\n\t* Get by id \n\t* and refresh from API  \n\t* @todo local cache and API integration \n\t* return FlickrPhoto for the given ID\n\t**/\n\tgetById(id): FlickrPhoto{\n\t\treturn this.photos.find(photo =>  photo.photo_id == id);\n\t}\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/profile/profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/profile/profile.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/auth/profile/profile.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  profile works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  profile works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/register/register.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/auth/register/register.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  register works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  register works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.css,sidebar.component.responsive.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sidebarItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/sidebar/sidebar.component.ts:35\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidebarItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidebarItems:     SidebarItem[]\n\n                    \n                \n                    \n                        \n                            Type :     SidebarItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n\t\t{\n\t\t\ttitle: 'All Flikr Photos',\n\t\t\timgSrc: '/assets/img/stag_lines_w.png',\n\t\t\tpath: '/photo',\n\t\t\ticon: 'fa fa-chevron-right', \n\t\t\tisSelected: true\n\t\t},\n\t\t{\n\t\t\ttitle: 'Search by Tags',\n\t\t\timgSrc: '/assets/img/dragon_lines_w.png',\n\t\t\tpath: '/photo/search',\n\t\t\ticon: 'fa fa-chevron-right'\n\t\t},\n\t\t{\n\t\t\ttitle: 'Favourites', \n\t\t\timgSrc: '/assets/img/flower_lines_w.png',\n\t\t\tpath: '/photo/favourites',\n\t\t\ticon: 'fa fa-chevron-right'\n\t\t}\n\t]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport {SidebarItem} from '../../models/SidebarItemModel';\n\n@Component({\n\tselector: 'app-sidebar',\n\ttemplateUrl: './sidebar.component.html',\n\tstyleUrls: [\n\t\t'./sidebar.component.css',\n\t\t'./sidebar.component.responsive.css'\n\t]\n})\nexport class SidebarComponent implements OnInit {\n\n\tsidebarItems: SidebarItem[] = [\n\t\t{\n\t\t\ttitle: 'All Flikr Photos',\n\t\t\timgSrc: '/assets/img/stag_lines_w.png',\n\t\t\tpath: '/photo',\n\t\t\ticon: 'fa fa-chevron-right', \n\t\t\tisSelected: true\n\t\t},\n\t\t{\n\t\t\ttitle: 'Search by Tags',\n\t\t\timgSrc: '/assets/img/dragon_lines_w.png',\n\t\t\tpath: '/photo/search',\n\t\t\ticon: 'fa fa-chevron-right'\n\t\t},\n\t\t{\n\t\t\ttitle: 'Favourites', \n\t\t\timgSrc: '/assets/img/flower_lines_w.png',\n\t\t\tpath: '/photo/favourites',\n\t\t\ticon: 'fa fa-chevron-right'\n\t\t}\n\t];\n\n\tconstructor() { \n\t\t\n\t}\n\n\tngOnInit() {\n\t\t\n\t}\n\n}\n\n    \n\n    \n        \n\t\n\t\t\n\t\t\n\t\t\tFlickr App \n\t\t\n\t\n\t\n\t\t\n\n\t\t\n\t\t\n\t\t\n\t\t\n\t\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\tFlickr App \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SidebarItem.html":{"url":"interfaces/SidebarItem.html","title":"interface - SidebarItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SidebarItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/SidebarItemModel.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        imgSrc\n                                \n                                \n                                            Optional\n                                        isSelected\n                                \n                                \n                                        path\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imgSrc\n                                    \n                                \n                                \n                                    \n                                        imgSrc:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSelected\n                                    \n                                \n                                \n                                    \n                                        isSelected:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SidebarItem{\n\timgSrc: string; \n\tpath: string;\n\ttitle: string; \n\ticon: string;\n\tisSelected?: boolean;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarItemComponent.html":{"url":"components/SidebarItemComponent.html","title":"component - SidebarItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sidebar/sidebar-item/sidebar-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar-item\n            \n\n            \n                styleUrls\n                sidebar-item.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar-item.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidebarItem\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/sidebar/sidebar-item/sidebar-item.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sidebarItem\n                    \n                    \n                            \n                            Type :    SidebarItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar-item/sidebar-item.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar-item/sidebar-item.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n\nimport {SidebarItem} from '../../../models/SidebarItemModel';\n\n@Component({\n\tselector: 'app-sidebar-item',\n\ttemplateUrl: './sidebar-item.component.html',\n\tstyleUrls: ['./sidebar-item.component.css']\n})\nexport class SidebarItemComponent implements OnInit {\n\t\n\t@Input() sidebarItem:SidebarItem; \n\n\tconstructor() { }\n\n\tngOnInit() {\n\t}\n\n}\n\n    \n\n    \n        \n\t\n\t\t\n\t\t\n\t\t\t{{sidebarItem.title}}\n\t\t\n\t\t\n\t\t\t\n\t\t\n\t\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t{{sidebarItem.title}}\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FlickrDetailsComponent', 'selector': 'app-flickr-details'},{'name': 'FlickrFavouritesComponent', 'selector': 'app-flickr-favourites'},{'name': 'FlickrListComponent', 'selector': 'flickr-list'},{'name': 'FlickrSearchComponent', 'selector': 'app-flickr-search'},{'name': 'FlickrTileComponent', 'selector': 'flickr-tile'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'LayoutHeaderComponent', 'selector': 'layout-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarItemComponent', 'selector': 'app-sidebar-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/components/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/auth/auth.component.ts\n            \n            \n                component\n            \n            \n                AuthComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/auth/confirm-email/confirm-email.component.ts\n            \n            \n                component\n            \n            \n                ConfirmEmailComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/auth/forgot-password/forgot-password.component.ts\n            \n            \n                component\n            \n            \n                ForgotPasswordComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/auth/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/auth/profile/profile.component.ts\n            \n            \n                component\n            \n            \n                ProfileComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/auth/register/register.component.ts\n            \n            \n                component\n            \n            \n                RegisterComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/container/container.component.ts\n            \n            \n                component\n            \n            \n                ContainerComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/container/flickr-details/flickr-details.component.ts\n            \n            \n                component\n            \n            \n                FlickrDetailsComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/components/container/flickr-favourites/flickr-favourites.component.ts\n            \n            \n                component\n            \n            \n                FlickrFavouritesComponent\n            \n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/components/container/flickr-list/flickr-list.component.ts\n            \n            \n                component\n            \n            \n                FlickrListComponent\n            \n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/components/container/flickr-list/flickr-tile/flickr-tile.component.ts\n            \n            \n                component\n            \n            \n                FlickrTileComponent\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/components/container/flickr-search/flickr-search.component.ts\n            \n            \n                component\n            \n            \n                FlickrSearchComponent\n            \n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                src/app/components/sidebar/sidebar-item/sidebar-item.component.ts\n            \n            \n                component\n            \n            \n                SidebarItemComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/sidebar/sidebar.component.ts\n            \n            \n                component\n            \n            \n                SidebarComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/layout/layout-header/layout-header.component.ts\n            \n            \n                component\n            \n            \n                LayoutHeaderComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/FlickrPhotoModel.ts\n            \n            \n                class\n            \n            \n                FlickrPhoto\n            \n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/app/models/SidebarItemModel.ts\n            \n            \n                interface\n            \n            \n                SidebarItem\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/contracts/IFlickrApiContract.ts\n            \n            \n                interface\n            \n            \n                IFlickrApiContract\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/contracts/IFlickrApiContract.ts\n            \n            \n                interface\n            \n            \n                IFlickrFeedContract\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/models/contracts/IFlickrApiItemContract.ts\n            \n            \n                interface\n            \n            \n                IFlickrApiItemContract\n            \n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/models/factories/FavouritesFactory.ts\n            \n            \n                injectable\n            \n            \n                FavouritesFactory\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/models/factories/FavouritesFactory.ts\n            \n            \n                interface\n            \n            \n                PhotoHashTable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/models/factories/PhotoCache.ts\n            \n            \n                injectable\n            \n            \n                PhotoCache\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/models/factories/PhotoCache.ts\n            \n            \n                interface\n            \n            \n                PhotoHashTable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/flickr-api/flickr-api.service.ts\n            \n            \n                injectable\n            \n            \n                FlickrApiService\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            body-parser : ^1.18.3\n        \n            core-js : ^2.5.4\n        \n            dotenv : ^6.0.0\n        \n            express : ^4.16.3\n        \n            http-errors : ^1.7.0\n        \n            morgan : ^1.9.0\n        \n            rxjs : ^6.0.0\n        \n            rxjs-compat : ^6.3.1\n        \n            serve-favicon : ^2.5.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nQuick Links\n\nOnline Demo\nCode Docs\nBackend repo\n\nScreenshots\nSearch Page\nSearch by Tag \n\nFavourites Page\nSave your favourites to a pin board\n\nDetails Page\nThis is far from finished, it should show the authour details too\n\nPublic Flikr Feed Page\nBrowse the public feed for inspiration\n\nQuick Start\nInstall and run \n\nClone: git clone https://github.com/mitni455/isentia-client-angular.git\nInstall dependencies: npm i\nRun tests \nInstall the CLI (if not installed) npm i -g @angular/cli \nng test\nng e2e\nServe locally: ng serve\n\nor with docker:\n\ndocker build -t isentia-flickr-app .\ndocker run -d -p 8080:8080 --name isentia-flickr-app isentia-flickr-app\n\nPlease raise a pull request for any developments, and use the issues for bugs and feature requests. \nBe sure to run compodoc -p src/tsconfig.app.json -d docs/ to generate docs.\nArchitecture\n\n\nAlso pictured is the backend architecture, available at this repo \n\n\n\nApplication\nDescription\n\n\n\n\nAngular6\nAngular6 is used as the simple SPA framework.\n\n\nExpressJs\nThe app is served by ExpressJs. We could also use this as a simple resourceful API too, however we have chosen to use microservices on Lambda\n\n\nDocker\nDocker is probably overkill here, but is used as a simple container to quickly setup the Angular/Express app on all environments (dev/test/staging)\n\n\n\n\n\n\nPlatform\nDescription\n\n\n\n\nBeanstalk\nAngular App is served using ExpressJs inside a Docker container\n\n\nAWS Gateway\nThe Angular App calls the AWS Gateway\n\n\nLambda\nA serveless microservice for handling Flickr and user management\n\n\nCognito\nnot used Used for User IAM and AAA\n\n\nDynamoDb\nUsed for saving user favourites.\n\n\n\n\n\n\nTools\nDescription\n\n\n\n\nTravis CI\nContinuous Integration and Deployment\n\n\nDockerHub\nDocker hub is used to deploy Docker images to ElasticBeanstalk\n\n\nSwaggerHub\nSwaggerHub is used to host the API documentation here\n\n\nCompoDoc\nAngular Documentation tool\n\n\nAgile\nGithub Projects\n\n\nBackstopJS 3\nVisual regression testing for responsive CSS\n\n\nMocha\nIntegration and API Testing (used for backend repo. I prefer it to Jasmine/Karma)\n\n\nJasmine + Karma\nBuilt in ng unit testing\n\n\nProtractor\nBuilt in ng e2e testing with PhantomJs and Chrome Web Driver\n\n\n\nCI/CD\n\n\n\n\n\nAlso pictured is the backend architecture, available at this repo \nEnvironments\n\n\n\nEnvironment\nDescription\n\n\n\n\nTest\nBecause this is AWS we need to deploy to a test environment online before we can run the integration tests. If these pass then the master branch will be deployed to the staging environment.\n\n\nStaging\nThe master branch will be deployed to the staging environment after all tests pass on the test environment.\n\n\nProduction\nThe production branch will be deployed to the production environment after all tests pass on the test environment. This is not setup for our simple example\n\n\n\nPipeline\nTravisCi is used as our Continuous Integration service. \nTests - Backend\nThe api documentation is available on SwaggerHub here\n\navailable here: https://app.swaggerhub.com/apis/kitset-io/isentia-flickr-api/1.0.0\nBDD - Backend\nThe integration tests are written in mocha available from the backend repo. \n\nTests - Frontend\nThe front end tests are split into e2e tests, unit tests and integration tests using angular cli tool, jasmine and karma. \n \nDevelopment Lifecycle\nDepending on the client tradeoffs between time, cost and quality I would follow the following development lifecycle including agile approach, extreme programming and BDD. \n\n\nDepending on the project, I typically have stagered design + development sprints \n\n\n\nSprint\nDescription\n\n\n\n\nDesign\nPlan > UX > UI > Backlog\n\n\nDevelopment\nPlan > User Stories > Test > Code > Deploy\n\n\n\n\n\n\n\n\nUser Story\nLifecycle\n\n\n\n\nUser Story\nCreate issue for each user story\n\n\nUX + UI\nIf no design phase, create wireframes and PSD/Sketch designs if applicable\n\n\nFailing Test\nDesign e2e test and unit test that fail\n\n\nCode\nCreate new branch for each user story.\n\n\nPassing Test\nWrite code to pass tests\n\n\nCommit\nRefactor to pass all tests and pull request for merge to master branch\n\n\nTest Env\nPush to test environment\n\n\nStaging\nIf tests pass, push to staging\n\n\nReview\nBusiness owner to review then push to production branch\n\n\nProduction\nIf passes tests, push to production\n\n\nRetrospective\nCollect feedback for sprint retrospective or add to product backlog\n\n\n\nPlan\nWe will use SCRUM as our agile methodology. Before the sprint starts we need to source the Product Backlog from the Business Owner and the roles we will be serving as our customer. \nWe will use Trello, Jira or Github Projects as our agile tool. \nThe roles are simple, we have one user. Optionally, it is typically helpful and improves enaggement with the client or business owner to source a persona for our roles rather than just saying \"user\" in our stories. This helps us focus on delivering value for the customer. \ne.g. Kayla as \"User\"\n\n\nThe epics for this sprint include: \n\n\n\nID\nEpic\n\n\n\n\nEpic 1:\nAs a user, I want to view the public feed from Flickr, so that I can save my favourites\n\n\nEpic 2:\nAs a user, I want to search for topics from the flickr feed, so that I can save time looking for topics I like\n\n\nEpic 3:\nAs a user, I want to save my favourites, so that I can view them quickly when I return to the app\n\n\nEpic 4:\nAs a user, I want a simple sidebar, so that I can navigate between Flickr, searches and favourites\n\n\n\nUX and UI\nThese epics can be further broken down into the following user stories by creating wireframes for the UX (User Experience)\n\n\n\n\n\nParent ID\nUI Epic\n\n\n\n\nEpic 1:\nAs a user, I want a Flickr list page\n\n\nEpic 1:\nAs a user, I want a Flickr details page\n\n\nEpic 2:\nAs a user, I want a search page\n\n\nEpic 3:\nAs a user, I want a favourites page\n\n\n\nBDD - e2e Tests\nFollowing BDD we already have enough for some e2e tests using protractor: \nAs a user, I want a Flickr list page  \n* Go to the home page at '/'\n* Expect to see 'Flickr Angular App'\n* Expect the 'All Photos' sidebar to be active As a user, I want a Flickr details page \n* Go to the details page at /flickr/{mockImageId}\n* Expect to see the title 'Mock Title'\n* Expect to see the image \n* Expect to see the the authour 'Mock Authour'\n* Expect to see the image description 'Mock Description' As a user, I want a search page \n* Go to the search page at '/flickr/search'\n* Enter the search term 'mock term' to a list of mock images\n* Expect the 'Search' sidebar to be active As a user, I want a simple sidebar \n* Expect to see a sidebar with the 'All Images'\n* Expect to see a sidebar with the 'Search'\n* Expect to see a sidebar with the anchor 'Favourites' User Stories\nA User Story as issues \n\n\n\nBoilerplate User Story\nBoiler Plate Tests\n\n\n\n\nComponents\n*DI  *Elements on Dom  * HTML for Mock Model  *Inputs()  *Outputs()  *Events triggered  *Events received  *Test for state: loading, success, warning, error  *Test lifecycle hooks  * BackstopJs CSS tests for responsive\n\n\nModels\n* DI   *Key /values set  * JSON Schema validation\n\n\nServices\n* DI  * Observable subscribe  * Get set  * Integration test for API\n\n\n\n\n\n\n#\n\n\n\n#\n\n\n\n#\n\n\n\n -->\n\n\n\n\nComponents\nAs a user, I want a Flickr list page  \n\nFlickr List component\nFlickr Tile component\n\nBDD/TDD - Flickr List component\n* should create the page\n* should show tiles for mock FlickrImages models \n\n* Visual tests - should look good on mobile portrait \n* Visual tests - should look good on mobile landscape\n* Visual tests - should look good on tablet portrait \n* Visual tests - should look good on tablet landscape\n* Visual tests - should look good on laptop\n* Visual tests - should look good on desktopBDD/TDD - Flickr Tile component\n* should be created \n* should show loading gif \n* should show mock image \n* should show mock title \n* should hide the authour by deafult  \n* should show authour on hover \n* should open the flickr details page on click \n* should have favourite button \n* favourite button should be off by default \n* favourite button should be on when Flickr Image model is saved \n\n* Visual tests - should look good on mobile portrait \n* Visual tests - should look good on mobile landscape\n* Visual tests - should look good on tablet portrait \n* Visual tests - should look good on tablet landscape\n* Visual tests - should look good on laptop\n* Visual tests - should look good on desktopAs a user, I want a Flickr details page \n\nFlickr details component\n\nBDD/TDD - Flickr details component\n* should be created \n* should show Image \n* should show title \n* should show authour \n* should show description \n* should show back button \n\n* Visual tests - should look good on mobile portrait \n* Visual tests - should look good on mobile landscape\n* Visual tests - should look good on tablet portrait \n* Visual tests - should look good on tablet landscape\n* Visual tests - should look good on laptop\n* Visual tests - should look good on desktopAs a user, I want a search page \nBDD/TDD - Search Page\n* should be created \n* should have search bar \n* should have no search tiles by default \n* should show loading \n* should show mock tiles for search term \"mock\" \n\n* Visual tests - should look good on mobile portrait \n* Visual tests - should look good on mobile landscape\n* Visual tests - should look good on tablet portrait \n* Visual tests - should look good on tablet landscape\n* Visual tests - should look good on laptop\n* Visual tests - should look good on desktopAs a user, I want a simple sidebar \nBDD/TDD - Unit Tests\n* should be created \n* should have menu item for All Images\n* should have menu item for Favourites\n* should have menu item for Search \n\n* Visual tests - should look good on mobile portrait \n* Visual tests - should look good on mobile landscape\n* Visual tests - should look good on tablet portrait \n* Visual tests - should look good on tablet landscape\n* Visual tests - should look good on laptop\n* Visual tests - should look good on desktopCode Docs\nSee the published code docs here\n\nAngular Development\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nAppModule -->\n\nContainerComponent->AppModule\n\n\n\n\n\nFlickrDetailsComponent\n\nFlickrDetailsComponent\n\nAppModule -->\n\nFlickrDetailsComponent->AppModule\n\n\n\n\n\nFlickrFavouritesComponent\n\nFlickrFavouritesComponent\n\nAppModule -->\n\nFlickrFavouritesComponent->AppModule\n\n\n\n\n\nFlickrListComponent\n\nFlickrListComponent\n\nAppModule -->\n\nFlickrListComponent->AppModule\n\n\n\n\n\nFlickrSearchComponent\n\nFlickrSearchComponent\n\nAppModule -->\n\nFlickrSearchComponent->AppModule\n\n\n\n\n\nFlickrTileComponent\n\nFlickrTileComponent\n\nAppModule -->\n\nFlickrTileComponent->AppModule\n\n\n\n\n\nLayoutHeaderComponent\n\nLayoutHeaderComponent\n\nAppModule -->\n\nLayoutHeaderComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSidebarItemComponent\n\nSidebarItemComponent\n\nAppModule -->\n\nSidebarItemComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nFavouritesFactory\n\nFavouritesFactory\n\nAppModule -->\n\nFavouritesFactory->AppModule\n\n\n\n\n\nFlickrApiService\n\nFlickrApiService\n\nAppModule -->\n\nFlickrApiService->AppModule\n\n\n\n\n\nPhotoCache\n\nPhotoCache\n\nAppModule -->\n\nPhotoCache->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  \tproduction: true,\n  \tapiUrl: 'https://l70217a84b.execute-api.ap-southeast-2.amazonaws.com/production/',\n  \tsearchTimeout: 3000\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tproduction: false,\n\tapiUrl: 'https://l70217a84b.execute-api.ap-southeast-2.amazonaws.com/staging/',\n\tsearchTimeout: 300,\n\tstorageStrategy: 'cache'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
